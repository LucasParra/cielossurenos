{"version":3,"sources":["state/querys/Users.js","hook/general.js","state/querys/Tasks.js","state/querys/Zones.js","state/querys/Office.js","state/querys/Address.js","routes.js","components/utils/Toas.js","containers/TheContent.js","containers/TheHeader.js","containers/_nav.js","components/Cards/UserCard.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["getTechnicians","supabase","from","select","eq","then","snapshot","data","catch","console","error","getUserByRut","rut","getUserByEmail","email","createUser","userData","insert","ID","createUserAddress","userAddressData","createUserProduct","userProductData","updateUserID","update","updateUserAddress","updateUserProduct","getUserByID","getUsersClients","limit","value","ilike","getClientsCount","stateID","nameState","count","name","getClientsCountOffice","officeID","createUserFinishTask","user","products","address","newUserID","Promise","all","map","product","UserID","createTask","TypeID","AssignedID","TechnicianID","ClientID","createClientOffice","addres","createAddress","newaddressID","AddressID","updateUserFinishTask","updateOfficeToClient","updateAddress","getUserBySearch","textSearch","or","unsubscribedProcessUser","ZoneID","getTechnicalZone","result","technical","_","random","length","StateID","User","subscribedProcessUser","getUserStates","useKeySelector","keys","useSelector","state","reduce","prev","curr","get","split","require","taskData","Priority","log","getTypesTasks","getTaskByUserID","order","ascending","updateTask","getLastTaskByUserID","finishTaskPending","TaskID","finishTaskProcessUnSubscribe","createTaskforAdmin","addressZoneID","task","getAdminZone","response","getCommentsTask","createCommentTask","commentData","getStateTask","createZone","updateZone","getZones","getAddressNames","AddressName","createOffice","updateOffice","OfficeID","getOffices","getOfficesToUserID","deleteOffice","delete","match","addressData","getAddressByUserID","Toaster","React","lazy","Tables","Tasks","Rol","Zones","TaskPending","Breadcrumbs","Cards","Carousels","Collapses","BasicForms","GeneralAdmin","UsersProductsAdmin","Products","ChargesPay","Offices","Jumbotrons","ListGroups","Navbars","Navs","Paginations","Popovers","ProgressBar","Switches","Tabs","Tooltips","BrandButtons","ButtonDropdowns","ButtonGroups","Buttons","Form","Charts","Dashboard","CoreUIIcons","Flags","Brands","Alerts","Badges","Modals","Colors","Typography","Widgets","Users","routes","path","exact","component","Toas","toas","show","alignHorizontal","lg","style","position","zIndex","top","borderRadius","backgroundColor","border","padding","closeButton","type","content","freeSet","cilCheckCircle","size","class","role","width","height","fontSize","fontWeight","paddingTop","marginLeft","label","loading","className","Comp","props","route","TheContent","fluid","fallback","memo","TheHeader","dispatch","useDispatch","colors","sidebarShow","withSubheader","justifyContent","inHeader","onClick","val","includes","payload","marginRight","secondary","auth","signOut","cilPowerStandby","color","_nav","_tag","_children","to","icon","users","UserCard","alignVertical","display","alignItems","marginTop","marginBottom","xl","textAlign","Names","Email","RolID","Name","TheSidebar","useEffect","session","onShowChange","items","navigation","filter","nav","indexOf","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/13.5318e77d.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { supabase } from \"src/config/configSupabase\";\nimport { createAddress, updateAddress } from \"./Address\";\nimport { createClientOffice, updateOfficeToClient } from \"./Office\";\nimport { createTask } from \"./Tasks\";\nimport { getTechnicalZone } from \"./Zones\";\n\nconst getTechnicians = () =>\n  supabase\n    .from(\"User\")\n    .select(\"*\")\n    .eq(\"RolID\", 1)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getUserByRut = (rut) =>\n  supabase\n    .from(\"User\")\n    .select(\"*\")\n    .eq(\"Rut\", rut)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getUserByEmail = (email) =>\n  supabase\n    .from(\"User\")\n    .select(\"*,RolID(*),ZoneID:UserAddress(AddressID(AddressZoneID))\")\n    .eq(\"Email\", email)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst createUser = (userData) =>\n  supabase\n    .from(\"User\")\n    .insert(userData)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst createUserAddress = (userAddressData) =>\n  supabase\n    .from(\"UserAddress\")\n    .insert(userAddressData)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst createUserProduct = (userProductData) =>\n  supabase\n    .from(\"UserProduct\")\n    .insert(userProductData)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst updateUserID = (userData) =>\n  supabase.from(\"User\").update(userData).eq(\"ID\", userData.ID);\n\nconst updateUserAddress = (userAddressData) =>\n  supabase\n    .from(\"UserAddress\")\n    .update(userAddressData)\n    .eq(\"ID\", userAddressData.ID);\n\nconst updateUserProduct = (userProductData) =>\n  supabase\n    .from(\"UserProduct\")\n    .update(userProductData)\n    .eq(\"ID\", userProductData.ID);\n\nconst getUserByID = (ID) =>\n  supabase\n    .from(\"User\")\n    .select(\"*,UserAddress!inner(Address(*,AddressZoneID(*)))\")\n    .eq(\"ID\", ID)\n    .then((snapshot) => snapshot.data[0])\n    .catch(console.error);\n\nconst queryUserToClient = () =>\n  supabase\n    .from(\"User\")\n    .select(\"*\")\n    .range(0, 1000)\n    .is(\"RolID\", null)\n    .then((snapshot) => {\n      console.log(snapshot.data);\n    });\nconst getClients = (limit) =>\n  supabase\n    .from(\"User\")\n    .select(\"*\")\n    .eq(\"RolID\", 2)\n    .limit(limit * 5 + 1)\n    .then(({ data }) => data)\n    .catch(console.error);\n\nconst getUsersClients = (limit, value) =>\n  supabase\n    .from(\"User\")\n    .select(\"*\")\n    .eq(\"RolID\", 2)\n    .ilike(\"Rut\", `%${value}%`)\n    .limit(limit * 5 + 1)\n    .then(({ data }) => data)\n    .catch(console.error);\n\nconst getClientsCount = (stateID, nameState) =>\n  supabase\n    .from(\"User\")\n    .select(\"*\", { count: \"exact\" })\n    .eq(\"RolID\", 2)\n    .eq(\"StateID\", stateID)\n    .then(({ count }) => ({ count, name: nameState, stateID }))\n    .catch(console.error);\n\nconst getClientsCountOffice = (officeID, stateID) =>\n  supabase\n    .from(\"OfficeUser\")\n    .select(\"User!inner(*),Office!inner(*)\", { count: \"exact\" })\n    .eq(\"User.RolID\", 2)\n    .eq(\"User.StateID\", stateID)\n    .eq(\"Office.ID\", officeID)\n    .then(({ count }) => count)\n    .catch(console.error);\n\nconst createUserFinishTask = (user, products, address, officeID) => {\n  createUser(user).then((newUserID) => {\n    Promise.all([\n      products.map((product) =>\n        createUserProduct({ ...product, UserID: newUserID })\n      ),\n      createTask({\n        TypeID: 1,\n        AssignedID: user.TechnicianID,\n        ClientID: newUserID,\n      }),\n      createClientOffice(newUserID, officeID),\n      address.map((addres) =>\n        createAddress(addres).then((newaddressID) => {\n          createUserAddress({\n            AddressID: newaddressID,\n            UserID: newUserID,\n          });\n        })\n      ),\n    ]);\n  });\n};\nconst updateUserFinishTask = (user, products, address, officeID) =>\n  updateUserID(user).then(() => {\n    Promise.all([\n      products.map((product) =>\n        product.ID\n          ? updateUserProduct({ ...product, UserID: user.ID })\n          : createUserProduct({ ...product, UserID: user.ID })\n      ),\n      updateOfficeToClient(user.ID, officeID),\n      address.map((addres) =>\n        addres.ID\n          ? updateAddress(addres).then((newaddressID) => {\n              updateUserAddress({\n                AddressID: newaddressID,\n                UserID: user.ID,\n              });\n            })\n          : createAddress(addres).then((newaddressID) => {\n              createUserAddress({\n                AddressID: newaddressID,\n                UserID: user.ID,\n              });\n            })\n      ),\n    ]);\n  });\n\nconst getUserBySearch = (textSearch, limit = 1) =>\n  supabase\n    .from(\"User\")\n    .select(\"*,Address(*)\")\n    .or(\n      `Names.ilike.%${textSearch}%,LastName.ilike.%${textSearch}%,Rut.ilike.%${textSearch}%`\n    )\n    .eq(\"RolID\", 2)\n    .limit(limit * 5 + 1)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst unsubscribedProcessUser = (UserID, ZoneID) =>\n  getTechnicalZone(ZoneID).then((result) => {\n    const technical = result[_.random(0, result.length - 1)];\n    updateUserID({ ID: UserID, StateID: 5 }).then(() => {\n      createTask({\n        TypeID: 16,\n        AssignedID: technical.User.ID,\n        ClientID: UserID,\n        StateID: 3,\n      });\n    });\n  });\n\nconst subscribedProcessUser = (UserID, ZoneID) =>\n  getTechnicalZone(ZoneID).then((result) => {\n    const technical = result[_.random(0, result.length - 1)];\n    updateUserID({ ID: UserID, StateID: 6 }).then(() => {\n      createTask({\n        TypeID: 17,\n        AssignedID: technical.User.ID,\n        ClientID: UserID,\n        StateID: 3,\n      });\n    });\n  });\n\nconst getUserStates = () =>\n  supabase\n    .from(\"UserState\")\n    .select(\"*\")\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nexport {\n  getTechnicians,\n  createUser,\n  createUserAddress,\n  createUserProduct,\n  getUserByRut,\n  updateUserID,\n  updateUserProduct,\n  updateUserAddress,\n  getUserByID,\n  queryUserToClient,\n  getClients,\n  getUserByEmail,\n  getClientsCount,\n  getClientsCountOffice,\n  createUserFinishTask,\n  updateUserFinishTask,\n  getUsersClients,\n  getUserBySearch,\n  unsubscribedProcessUser,\n  subscribedProcessUser,\n  getUserStates,\n};\n","import { useSelector } from \"react-redux\";\n\nimport _ from \"lodash\";\nconst useKeySelector = (keys) =>\n  useSelector((state) =>\n    typeof keys === \"string\"\n      ? state[keys]\n      : keys.reduce(\n          (prev, curr) => ({ ...prev, [curr]: _.get(state, curr.split(\".\")) }),\n          {}\n        )\n  );\n\nexport { useKeySelector };\n","import { getAdminZone } from \"./Zones\";\n\nconst { supabase } = require(\"src/config/configSupabase\");\n\nconst createTask = (taskData) =>\n  supabase\n    .from(\"Task\")\n    .insert({ ...taskData, Priority: \"Media\" })\n    .then((snapshot) => console.log(snapshot));\n\nconst getTypesTasks = () =>\n  supabase\n    .from(\"TaskType\")\n    .select(\"*\")\n    .then(({ data }) => data);\n\nconst getTaskByUserID = (UserID) =>\n  supabase\n    .from(\"Task\")\n    .select(\"*,TypeID(Name)\")\n    .order(\"ID\", { ascending: false })\n    .eq(\"ClientID\", UserID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst updateTask = (updateTask) =>\n  supabase.from(\"Task\").update(updateTask).eq(\"ID\", updateTask.ID);\n\nconst getLastTaskByUserID = (UserID) =>\n  supabase\n    .from(\"Task\")\n    .select(\"*\")\n    .order(\"ID\", { ascending: false })\n    .eq(\"ClientID\", UserID)\n    .or(\"StateID.eq.1,StateID.eq.3,TypeID.eq.4\")\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst finishTaskPending = (TaskID) =>\n  supabase\n    .from(\"Task\")\n    .update({ StateID: 2 })\n    .eq(\"ID\", TaskID)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst getTaskPending = () =>\n  supabase\n    .from(\"Task\")\n    .select(\"*, ClientID(*),TypeID(Name)\")\n    .eq(\"StateID\", 1)\n    .then((snapshot) => snapshot.data);\n\nconst finishTaskProcessUnSubscribe = (UserID) =>\n  supabase\n    .from(\"Task\")\n    .update({ StateID: 2 })\n    .eq(\"StateID\", 3)\n    .eq(\"ClientID.ID\", UserID)\n    .eq(\"TypeID.ID\", 16)\n    .then((snapshot) => snapshot.data);\n\nconst createTaskforAdmin = (addressZoneID, task) =>\n  getAdminZone(addressZoneID).then((response) =>\n    createTask({ ...task, AssignedID: response[0].User.ID, StateID: 3 })\n  );\n\nconst getCommentsTask = (TaskID) =>\n  supabase\n    .from(\"TaskComments\")\n    .select(\"*,UserID(Names,LastName)\")\n    .eq(\"TaskID\", TaskID)\n    .then((snapshot) => snapshot.data);\n\nconst createCommentTask = (commentData) =>\n  supabase\n    .from(\"TaskComments\")\n    .insert(commentData)\n    .then((snapshot) => snapshot?.data[0]?.ID);\n\nconst getStateTask = () =>\n  supabase\n    .from(\"TaskState\")\n    .select(\"*,Task!inner(*)\")\n    .then((snapshot) => snapshot.data);\n\nexport {\n  createTask,\n  getTypesTasks,\n  getTaskByUserID,\n  updateTask,\n  getLastTaskByUserID,\n  finishTaskPending,\n  getTaskPending,\n  createTaskforAdmin,\n  finishTaskProcessUnSubscribe,\n  getCommentsTask,\n  createCommentTask,\n  getStateTask,\n};\n","const { supabase } = require(\"src/config/configSupabase\");\n\nconst createZone = (data) =>\n  supabase\n    .from(\"Zones\")\n    .insert(data)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst updateZone = (ID, data) =>\n  supabase.from(\"Zones\").update(data).eq(\"ID\", ID);\n\nconst getZones = () =>\n  supabase\n    .from(\"Zones\")\n    .select(\"*\")\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getAdminZone = (ZoneID) =>\n  supabase\n    .from(\"UserAddress\")\n    .select(\"User!inner(*),Address!inner(*)\")\n    .eq(\"User.RolID\", 8)\n    .eq(\"Address.AddressZoneID\", ZoneID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getTechnicalZone = (ZoneID) =>\n  supabase\n    .from(\"UserAddress\")\n    .select(\"User!inner(*),Address!inner(*)\")\n    .eq(\"User.RolID\", 1)\n    .eq(\"Address.AddressZoneID\", ZoneID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getAddressNames = (AddressName) =>\n  supabase\n    .from(\"UserAddress\")\n    .select(\"User!inner(*),Address!inner(*)\")\n    .eq(\"User.RolID\", 2)\n    .ilike(\"Address.AddressName\", `%${AddressName}%`)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nexport {\n  createZone,\n  updateZone,\n  getZones,\n  getAdminZone,\n  getTechnicalZone,\n  getAddressNames,\n};\n","const { supabase } = require(\"src/config/configSupabase\");\n\nconst createOffice = (data) =>\n  supabase\n    .from(\"Office\")\n    .insert(data)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst updateOffice = (ID, data) =>\n  supabase.from(\"Office\").update(data).eq(\"ID\", ID);\n\nconst updateOfficeToClient = (UserID, officeID) =>\n  supabase\n    .from(\"OfficeUser\")\n    .update({ OfficeID: officeID })\n    .eq(\"UserID\", UserID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst createClientOffice = (UserID, OfficeID) =>\n  supabase\n    .from(\"OfficeUser\")\n    .insert({ OfficeID, UserID })\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst getOffices = (limit = 1) =>\n  supabase\n    .from(\"Office\")\n    .select(\"*\")\n    .limit(limit * 5 + 1)\n    .then((snapshot) => snapshot.data);\n\nconst getOfficesToUserID = (UserID) =>\n  supabase\n    .from(\"OfficeUser\")\n    .select(\"*,OfficeID(*)\")\n    .eq(\"UserID\", UserID)\n    .then((snapshot) => snapshot.data[0]);\n\nconst deleteOffice = (ID) => supabase.from(\"Office\").delete().match({ ID });\n\nexport {\n  createOffice,\n  updateOffice,\n  createClientOffice,\n  getOffices,\n  updateOfficeToClient,\n  getOfficesToUserID,\n  deleteOffice,\n};\n","import { supabase } from \"src/config/configSupabase\";\n\nconst createAddress = (addressData) =>\n  supabase\n    .from(\"Address\")\n    .insert(addressData)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst updateAddress = (addressData) =>\n  supabase.from(\"Address\").update(addressData).eq(\"ID\", addressData.ID);\n\nconst getAddressByUserID = (UserID) =>\n  supabase\n    .from(\"UserAddress\")\n    .select(\"*,Address (*)\")\n    .eq(\"UserID\", UserID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nexport { createAddress, getAddressByUserID, updateAddress };\n","import React from \"react\";\n\nconst Toaster = React.lazy(() =>\n  import(\"./views/notifications/toaster/Toaster\")\n);\nconst Tables = React.lazy(() => import(\"./views/base/tables/Tables\"));\n\nconst Tasks = React.lazy(() => import(\"./views/base/tables/Tasks\"));\nconst Rol = React.lazy(() => import(\"./views/base/tables/Rol\"));\nconst Zones = React.lazy(() => import(\"./views/base/tables/Zones\"));\n\nconst TaskPending = React.lazy(() =>\n  import(\"./views/base/tables/TasksPending\")\n);\n\nconst Breadcrumbs = React.lazy(() =>\n  import(\"./views/base/breadcrumbs/Breadcrumbs\")\n);\nconst Cards = React.lazy(() => import(\"./views/base/cards/Cards\"));\nconst Carousels = React.lazy(() => import(\"./views/base/carousels/Carousels\"));\nconst Collapses = React.lazy(() => import(\"./views/base/collapses/Collapses\"));\nconst BasicForms = React.lazy(() => import(\"./views/base/forms/BasicForms\"));\n\n//admin\nconst GeneralAdmin = React.lazy(() => import(\"./views/admin/AdminGeneral\"));\nconst UsersProductsAdmin = React.lazy(() =>\n  import(\"./views/admin/UsersProducts\")\n);\n// views\nconst Products = React.lazy(() => import(\"./views/product/Products\"));\nconst ChargesPay = React.lazy(() => import(\"./views/chargePay/ChargesPay\"));\nconst Offices = React.lazy(() => import(\"./views/office/Offices\"));\n\nconst Jumbotrons = React.lazy(() =>\n  import(\"./views/base/jumbotrons/Jumbotrons\")\n);\nconst ListGroups = React.lazy(() =>\n  import(\"./views/base/list-groups/ListGroups\")\n);\nconst Navbars = React.lazy(() => import(\"./views/base/navbars/Navbars\"));\nconst Navs = React.lazy(() => import(\"./views/base/navs/Navs\"));\nconst Paginations = React.lazy(() =>\n  import(\"./views/base/paginations/Pagnations\")\n);\nconst Popovers = React.lazy(() => import(\"./views/base/popovers/Popovers\"));\nconst ProgressBar = React.lazy(() =>\n  import(\"./views/base/progress-bar/ProgressBar\")\n);\n\nconst Switches = React.lazy(() => import(\"./views/base/switches/Switches\"));\nconst Tabs = React.lazy(() => import(\"./views/base/tabs/Tabs\"));\nconst Tooltips = React.lazy(() => import(\"./views/base/tooltips/Tooltips\"));\nconst BrandButtons = React.lazy(() =>\n  import(\"./views/buttons/brand-buttons/BrandButtons\")\n);\nconst ButtonDropdowns = React.lazy(() =>\n  import(\"./views/buttons/button-dropdowns/ButtonDropdowns\")\n);\nconst ButtonGroups = React.lazy(() =>\n  import(\"./views/buttons/button-groups/ButtonGroups\")\n);\nconst Buttons = React.lazy(() => import(\"./views/buttons/buttons/Buttons\"));\nconst Form = React.lazy(() => import(\"./views/buttons/form/Form\"));\nconst Charts = React.lazy(() => import(\"./views/charts/Charts\"));\nconst Dashboard = React.lazy(() => import(\"./views/dashboard/Dashboard\"));\nconst CoreUIIcons = React.lazy(() =>\n  import(\"./views/icons/coreui-icons/CoreUIIcons\")\n);\nconst Flags = React.lazy(() => import(\"./views/icons/flags/Flags\"));\nconst Brands = React.lazy(() => import(\"./views/icons/brands/Brands\"));\nconst Alerts = React.lazy(() => import(\"./views/notifications/alerts/Alerts\"));\nconst Badges = React.lazy(() => import(\"./views/notifications/badges/Badges\"));\nconst Modals = React.lazy(() => import(\"./views/notifications/modals/Modals\"));\nconst Colors = React.lazy(() => import(\"./views/theme/colors/Colors\"));\nconst Typography = React.lazy(() =>\n  import(\"./views/theme/typography/Typography\")\n);\nconst Widgets = React.lazy(() => import(\"./views/widgets/Widgets\"));\nconst Users = React.lazy(() => import(\"./views/users/Users\"));\nconst User = React.lazy(() => import(\"./views/users/User\"));\n\nconst routes = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/dashboard\", name: \"Dashboard\", component: Dashboard },\n  { path: \"/admin\", name: \"General\", component: GeneralAdmin, exact: true },\n  {\n    path: \"/admin/productos\",\n    name: \"usuarios productos\",\n    component: UsersProductsAdmin,\n    exact: true,\n  },\n  { path: \"/products\", name: \"Products\", component: Products },\n  { path: \"/charges\", name: \"zonas\", component: ChargesPay },\n  { path: \"/offices\", name: \"sucursal\", component: Offices },\n  { path: \"/menu/usuarios\", name: \"Usuarios\", component: Tables },\n  { path: \"/menu/tareas\", name: \"tareas\", component: Tasks },\n  { path: \"/menu/roles\", name: \"roles\", component: Rol },\n\n  { path: \"/menu/zones\", name: \"zonas\", component: Zones },\n  {\n    path: \"/menu/pendientes\",\n    name: \"pendientes\",\n    component: TaskPending,\n  },\n  {\n    path: \"/menu/user/:id\",\n    exact: true,\n    name: \"Usuario\",\n    component: User,\n  },\n\n  { path: \"/theme\", name: \"Theme\", component: Colors, exact: true },\n  { path: \"/theme/colors\", name: \"Colors\", component: Colors },\n  { path: \"/theme/typography\", name: \"Typography\", component: Typography },\n  { path: \"/base\", name: \"Base\", component: Cards, exact: true },\n  { path: \"/base/breadcrumbs\", name: \"Breadcrumbs\", component: Breadcrumbs },\n  { path: \"/base/cards\", name: \"Cards\", component: Cards },\n  { path: \"/base/carousels\", name: \"Carousel\", component: Carousels },\n  { path: \"/base/collapses\", name: \"Collapse\", component: Collapses },\n  { path: \"/base/forms\", name: \"Forms\", component: BasicForms },\n  { path: \"/base/jumbotrons\", name: \"Jumbotrons\", component: Jumbotrons },\n  { path: \"/base/list-groups\", name: \"List Groups\", component: ListGroups },\n  { path: \"/base/navbars\", name: \"Navbars\", component: Navbars },\n  { path: \"/base/navs\", name: \"Navs\", component: Navs },\n  { path: \"/base/paginations\", name: \"Paginations\", component: Paginations },\n  { path: \"/base/popovers\", name: \"Popovers\", component: Popovers },\n  { path: \"/base/progress-bar\", name: \"Progress Bar\", component: ProgressBar },\n\n  { path: \"/base/switches\", name: \"Switches\", component: Switches },\n  { path: \"/base/tables\", name: \"Tables\", component: Tables },\n  { path: \"/base/tabs\", name: \"Tabs\", component: Tabs },\n  { path: \"/base/tooltips\", name: \"Tooltips\", component: Tooltips },\n  { path: \"/buttons\", name: \"Buttons\", component: Buttons, exact: true },\n  { path: \"/buttons/buttons\", name: \"Buttons\", component: Buttons },\n  {\n    path: \"/buttons/button-dropdowns\",\n    name: \"Dropdowns\",\n    component: ButtonDropdowns,\n  },\n  {\n    path: \"/buttons/button-groups\",\n    name: \"Button Groups\",\n    component: ButtonGroups,\n  },\n  {\n    path: \"/buttons/brand-buttons\",\n    name: \"Brand Buttons\",\n    component: BrandButtons,\n  },\n  { path: \"/buttons/form\", name: \"Form\", component: Form },\n  { path: \"/charts\", name: \"Charts\", component: Charts },\n  { path: \"/icons\", exact: true, name: \"Icons\", component: CoreUIIcons },\n  { path: \"/icons/coreui-icons\", name: \"CoreUI Icons\", component: CoreUIIcons },\n  { path: \"/icons/flags\", name: \"Flags\", component: Flags },\n  { path: \"/icons/brands\", name: \"Brands\", component: Brands },\n  {\n    path: \"/notifications\",\n    name: \"Notifications\",\n    component: Alerts,\n    exact: true,\n  },\n  { path: \"/notifications/alerts\", name: \"Alerts\", component: Alerts },\n  { path: \"/notifications/badges\", name: \"Badges\", component: Badges },\n  { path: \"/notifications/modals\", name: \"Modals\", component: Modals },\n  { path: \"/notifications/toaster\", name: \"Toaster\", component: Toaster },\n  { path: \"/widgets\", name: \"Widgets\", component: Widgets },\n  { path: \"/users\", exact: true, name: \"Users\", component: Users },\n];\n\nexport default routes;\n","import { freeSet } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CCol, CRow, CToast, CToaster, CToastHeader } from \"@coreui/react\";\nimport React from \"react\";\nimport { useKeySelector } from \"src/hook/general\";\n\nconst Toas = () => {\n  const { toas } = useKeySelector([\"toas\"]);\n\n  if (!toas.show) return null;\n  return (\n    <CRow alignHorizontal=\"end\">\n      <CCol\n        lg=\"3\"\n        style={{\n          position: \"absolute\",\n          zIndex: 999,\n          top: 60,\n        }}\n      >\n        <CToaster position=\"right\" key=\"toaster\">\n          <CToast\n            key=\"toast\"\n            show={toas.show}\n            style={{\n              borderRadius: 12,\n              backgroundColor: \"#f2f2f3\",\n              border: \"2px solid #f2f2f3\",\n              padding: 10,\n            }}\n          >\n            <CToastHeader\n              closeButton={true}\n              style={{ backgroundColor: \"#f2f2f3\", border: 0 }}\n            >\n              {toas.type === \"success\" && (\n                <CIcon content={freeSet.cilCheckCircle} size=\"2xl\" />\n              )}\n              {toas.type === \"loading\" && (\n                <div class=\"d-flex justify-content-center\">\n                  <div\n                    class=\"spinner-grow text-info\"\n                    role=\"status\"\n                    style={{\n                      width: \"1.5rem\",\n                      height: \"1.5rem\",\n                    }}\n                  />\n                </div>\n              )}\n              <h6\n                style={{\n                  fontSize: 18,\n                  fontWeight: \"bold\",\n                  paddingTop: 10,\n                  marginLeft: 5,\n                }}\n              >\n                {toas.label}\n              </h6>\n            </CToastHeader>\n          </CToast>\n        </CToaster>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Toas;\n","import React, { Suspense } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { CContainer, CFade } from \"@coreui/react\";\n\n// routes config\nimport routes from \"../routes\";\nimport Toas from \"src/components/utils/Toas\";\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n);\n\nconst Comp = (props) => {\n  return (\n    <CFade>\n      <props.route.component {...props} />\n    </CFade>\n  );\n};\n\nconst TheContent = () => {\n  return (\n    <main className=\"c-main\">\n      <Toas />\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route) => {\n              return (\n                route.component && (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    component={() => (\n                      <Comp route={route} component={route.component} />\n                    )}\n                  />\n                )\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </CContainer>\n    </main>\n  );\n};\n\nexport default React.memo(TheContent);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { CHeader, CToggler, CHeaderNav, CButton } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport { freeSet } from \"@coreui/icons\";\nimport { useKeySelector } from \"src/hook/general\";\nimport { supabase } from \"src/config/configSupabase\";\n\nconst TheHeader = () => {\n  const dispatch = useDispatch();\n  const { colors, sidebarShow } = useKeySelector([\"colors\", \"sidebarShow\"]);\n\n  const toggleSidebar = () => {\n    const val = [true, \"responsive\"].includes(sidebarShow)\n      ? false\n      : \"responsive\";\n    dispatch({ type: \"SET_SIDEBARSHOW\", payload: val });\n  };\n\n  const toggleSidebarMobile = () => {\n    const val = [false, \"responsive\"].includes(sidebarShow)\n      ? true\n      : \"responsive\";\n    dispatch({ type: \"SET_SIDEBARSHOW\", payload: val });\n  };\n\n  return (\n    <CHeader withSubheader style={{ justifyContent: \"space-between\" }}>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n\n      <CHeaderNav style={{ marginRight: 8 }}>\n        <CButton\n          style={{ backgroundColor: colors.secondary }}\n          onClick={() => supabase.auth.signOut()}\n        >\n          <CIcon\n            content={freeSet.cilPowerStandby}\n            size=\"xl\"\n            style={{ color: \"#fff\" }}\n          />\n        </CButton>\n      </CHeaderNav>\n    </CHeader>\n  );\n};\n\nexport default TheHeader;\n","const _nav = [\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Dashboard\",\n  //   to: \"/dashboard\",\n  //   icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\" />,\n  //   badge: {\n  //     color: \"info\",\n  //     text: \"NEW\",\n  //   },\n  // },\n  {\n    _tag: \"CSidebarNavTitle\",\n    _children: [\"Menu\"],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5 style={{ fontWeight: \"bold\" }}>General</h5>,\n    to: \"/admin\",\n    icon: \"cil-chart-pie\",\n    users: [8, 7],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>productos de clientes</h5>,\n    to: \"/admin/productos\",\n    icon: \"cil-user\",\n    users: [8],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Productos</h5>,\n    to: \"/products\",\n    icon: \"cil-list\",\n    users: [8, 7],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>cargos</h5>,\n    to: \"/charges\",\n    icon: \"cil-dollar\",\n    users: [8],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Usuarios</h5>,\n    to: \"/menu/usuarios\",\n    icon: \"cil-people\",\n    users: [8, 7],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Mis Tareas</h5>,\n    to: \"/menu/tareas\",\n    icon: \"cil-task\",\n    users: [8, 7, 1],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Tareas Tecnicos</h5>,\n    to: \"/menu/pendientes\",\n    icon: \"cil-task\",\n    users: [8, 7],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Sucursal</h5>,\n    to: \"/offices\",\n    icon: \"cil-home\",\n    users: [8],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Roles</h5>,\n    to: \"/menu/roles\",\n    icon: \"cil-laptop\",\n    users: [8],\n  },\n  {\n    _tag: \"CSidebarNavItem\",\n    name: <h5>Zonas</h5>,\n    to: \"/menu/zones\",\n    icon: \"cil-map\",\n    users: [8, 7],\n  },\n\n  // {\n  //   _tag: \"CSidebarNavTitle\",\n  //   _children: [\"Theme\"],\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Colors\",\n  //   to: \"/theme/colors\",\n  //   icon: \"cil-drop\",\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Typography\",\n  //   to: \"/theme/typography\",\n  //   icon: \"cil-pencil\",\n  // },\n  // {\n  //   _tag: \"CSidebarNavTitle\",\n  //   _children: [\"Components\"],\n  // },\n  // {\n  //   _tag: \"CSidebarNavDropdown\",\n  //   name: \"Base\",\n  //   route: \"/base\",\n  //   icon: \"cil-puzzle\",\n  //   _children: [\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Breadcrumb\",\n  //       to: \"/base/breadcrumbs\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Cards\",\n  //       to: \"/base/cards\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Carousel\",\n  //       to: \"/base/carousels\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Collapse\",\n  //       to: \"/base/collapses\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Forms\",\n  //       to: \"/base/forms\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Jumbotron\",\n  //       to: \"/base/jumbotrons\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"List group\",\n  //       to: \"/base/list-groups\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Navs\",\n  //       to: \"/base/navs\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Navbars\",\n  //       to: \"/base/navbars\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Pagination\",\n  //       to: \"/base/paginations\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Popovers\",\n  //       to: \"/base/popovers\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Progress\",\n  //       to: \"/base/progress-bar\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Switches\",\n  //       to: \"/base/switches\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Tables\",\n  //       to: \"/base/tables\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Tabs\",\n  //       to: \"/base/tabs\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Tooltips\",\n  //       to: \"/base/tooltips\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: \"CSidebarNavDropdown\",\n  //   name: \"Buttons\",\n  //   route: \"/buttons\",\n  //   icon: \"cil-cursor\",\n  //   _children: [\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Buttons\",\n  //       to: \"/buttons/buttons\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Brand buttons\",\n  //       to: \"/buttons/brand-buttons\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Buttons groups\",\n  //       to: \"/buttons/button-groups\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Dropdowns\",\n  //       to: \"/buttons/button-dropdowns\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"User Form\",\n  //       to: \"/buttons/form\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Charts\",\n  //   to: \"/charts\",\n  //   icon: \"cil-chart-pie\",\n  // },\n  // {\n  //   _tag: \"CSidebarNavDropdown\",\n  //   name: \"Icons\",\n  //   route: \"/icons\",\n  //   icon: \"cil-star\",\n  //   _children: [\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"CoreUI Free\",\n  //       to: \"/icons/coreui-icons\",\n  //       badge: {\n  //         color: \"success\",\n  //         text: \"NEW\",\n  //       },\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"CoreUI Flags\",\n  //       to: \"/icons/flags\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"CoreUI Brands\",\n  //       to: \"/icons/brands\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: \"CSidebarNavDropdown\",\n  //   name: \"Notifications\",\n  //   route: \"/notifications\",\n  //   icon: \"cil-bell\",\n  //   _children: [\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Alerts\",\n  //       to: \"/notifications/alerts\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Badges\",\n  //       to: \"/notifications/badges\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Modal\",\n  //       to: \"/notifications/modals\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Toaster\",\n  //       to: \"/notifications/toaster\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Widgets\",\n  //   to: \"/widgets\",\n  //   icon: \"cil-calculator\",\n  //   badge: {\n  //     color: \"info\",\n  //     text: \"NEW\",\n  //   },\n  // },\n  // {\n  //   _tag: \"CSidebarNavDivider\",\n  // },\n  // {\n  //   _tag: \"CSidebarNavTitle\",\n  //   _children: [\"Extras\"],\n  // },\n  // {\n  //   _tag: \"CSidebarNavDropdown\",\n  //   name: \"Pages\",\n  //   route: \"/pages\",\n  //   icon: \"cil-star\",\n  //   _children: [\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Login\",\n  //       to: \"/login\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Register\",\n  //       to: \"/register\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Error 404\",\n  //       to: \"/404\",\n  //     },\n  //     {\n  //       _tag: \"CSidebarNavItem\",\n  //       name: \"Error 500\",\n  //       to: \"/500\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Disabled\",\n  //   icon: \"cil-ban\",\n  //   badge: {\n  //     color: \"secondary\",\n  //     text: \"NEW\",\n  //   },\n  //   addLinkClass: \"c-disabled\",\n  //   disabled: true,\n  // },\n  // {\n  //   _tag: \"CSidebarNavDivider\",\n  //   className: \"m-2\",\n  // },\n  // {\n  //   _tag: \"CSidebarNavTitle\",\n  //   _children: [\"Labels\"],\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Label danger\",\n  //   to: \"\",\n  //   icon: {\n  //     name: \"cil-star\",\n  //     className: \"text-danger\",\n  //   },\n  //   label: true,\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Label info\",\n  //   to: \"\",\n  //   icon: {\n  //     name: \"cil-star\",\n  //     className: \"text-info\",\n  //   },\n  //   label: true,\n  // },\n  // {\n  //   _tag: \"CSidebarNavItem\",\n  //   name: \"Label warning\",\n  //   to: \"\",\n  //   icon: {\n  //     name: \"cil-star\",\n  //     className: \"text-warning\",\n  //   },\n  //   label: true,\n  // },\n  // {\n  //   _tag: \"CSidebarNavDivider\",\n  //   className: \"m-2\",\n  // },\n];\n\nexport default _nav;\n","import CIcon from \"@coreui/icons-react\";\nimport { CCol, CRow } from \"@coreui/react\";\nimport React from \"react\";\n\nimport { useKeySelector } from \"src/hook/general\";\n\nconst UserCard = () => {\n  const { user, colors } = useKeySelector([\"user\", \"colors\"]);\n  return (\n    <>\n      <CRow alignVertical=\"center\" alignHorizontal=\"center\">\n        <div\n          style={{\n            backgroundColor: colors.secondary,\n            width: 100,\n            height: 100,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"50%\",\n            marginTop: 24,\n            marginBottom: 24,\n          }}\n        >\n          <CIcon name=\"cil-user\" height=\"60\" />\n        </div>\n      </CRow>\n      <CRow alignVertical=\"center\" alignHorizontal=\"center\">\n        <CCol xl=\"12\" style={{ textAlign: \"center\" }}>\n          <h5 style={{ fontWeight: \"bold\", marginBottom: 16 }}>\n            {user?.Names}\n          </h5>\n        </CCol>\n        <CCol xl=\"12\" style={{ textAlign: \"center\" }}>\n          <h5 style={{ fontWeight: \"bold\", marginBottom: 16 }}>\n            {user?.Email}\n          </h5>\n        </CCol>\n        <CCol xl=\"12\" style={{ textAlign: \"center\" }}>\n          <h5 style={{ fontWeight: \"bold\", marginBottom: 16 }}>\n            {user?.RolID?.Name}\n          </h5>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default UserCard;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from \"@coreui/react\";\nimport _ from \"lodash\";\n\nimport navigation from \"./_nav\";\nimport { useKeySelector } from \"src/hook/general\";\nimport { supabase } from \"src/config/configSupabase\";\nimport { getUserByEmail } from \"src/state/querys/Users\";\nimport UserCard from \"src/components/Cards/UserCard\";\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch();\n  const { user, sidebarShow } = useKeySelector([\"user\", \"sidebarShow\"]);\n\n  const componentDidMount = () => {\n    if (!(user.length === 0)) {\n      const {\n        user: { email },\n      } = supabase.auth.session();\n      return getUserByEmail(email).then((response) =>\n        dispatch({ type: \"SET_USER\", payload: response[0] })\n      );\n    }\n  };\n  useEffect(componentDidMount, [dispatch, user.length]);\n\n  // if (!user.RolID) return;\n  return (\n    <CSidebar\n      show={sidebarShow}\n      onShowChange={(val) =>\n        dispatch({ type: \"SET_SIDEBARSHOW\", payload: val })\n      }\n    >\n      <CSidebarNav>\n        <UserCard />\n        <CCreateElement\n          items={navigation.filter(\n            (nav) => _.indexOf(nav.users, user?.RolID?.ID) !== -1\n          )}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle,\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\" />\n    </CSidebar>\n  );\n};\n\nexport default React.memo(TheSidebar);\n","import React from \"react\";\nimport { TheContent, TheSidebar, TheHeader } from \"./index\";\n\nconst TheLayout = () => {\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar />\n      <div className=\"c-wrapper\">\n        <TheHeader />\n        <div className=\"c-body\">\n          <TheContent />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TheLayout;\n"],"sourceRoot":""}