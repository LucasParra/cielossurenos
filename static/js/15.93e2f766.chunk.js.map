{"version":3,"sources":["components/buttons/ButtonOptionTable.js","components/buttons/UploadFile.js","state/querys/Product.js","components/Tables/SelecteProductsTable.js","components/Modals/SelectProductModal.js","components/Modals/DeleteModal.js","components/Modals/ChargesPayModal.js","utils/colors.js","utils/general.js","components/Tables/ProductsTable.js","views/product/Products.js"],"names":["ButtonOptionTable","onPress","color","icon","className","col","xs","sm","md","onClick","content","size","UploadFile","children","value","onChange","disabled","accept","htmlFor","style","display","id","multiple","type","getProducts","limit","supabase","from","select","then","snapshot","data","catch","console","error","getProductByIDUser","UserID","eq","countProductUsed","productID","count","SelecteProductsTable","productsSelected","setProductsSelected","useState","products","setProducts","loading","setLoading","fields","productEffect","productsApi","map","product","Nombre","Name","Precio","Intl","NumberFormat","currency","format","BasePrice","useEffect","items","itemsPerPage","onPageChange","pagination","scopedSlots","personalizar_precio","item","placeholder","defaultValue","target","ProductID","ID","Price","parseInt","activo","variant","filter","length","checked","label","name","paddingLeft","customClasses","SelectProductModal","show","setShow","onFinish","onClose","closeButton","DeleteModal","fontWeight","width","textAlign","ChargesPayModal","nameEdit","setName","validated","setValidated","required","colorsChart","nameStateSpanish","stateID","key","ProductsTable","setProduct","setShowDeleteModal","setModalVisible","editar","freeSet","cilPencil","eliminar","cilTrash","initProduct","StateID","Products","useKeySelector","user","colors","noteTask","setNoteTask","lastProduct","setLastProduct","modalVisible","productChart","setProductChart","showDeleteModal","componentDidMount","Promise","all","result","marginBottom","backgroundColor","primary","lg","datasets","labels","options","tooltips","enabled","delete","match","RolID","createTaskforAdmin","ZoneID","AddressID","AddressZoneID","TypeID","ClientID","Note","Data","LastData","upsert","insert"],"mappings":"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Y,OAAQC,MAAO,QAHtC,oC,qGCpEd,IAAMQ,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WClDIC,EAAmB,SAACC,GACxB,OAAQA,GACN,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,gBACT,KAAK,EACH,MAAO,yBACT,KAAK,EACH,MAAO,wBAET,QACE,MAAO,gB,yICXPvD,EAAS,CACb,KACA,CAAEwD,IAAK,OAAQvB,MAAO,UACtB,CAAEuB,IAAK,YAAavB,MAAO,UAC3B,SACA,YA6CawB,EA1CO,SAAC,GAOhB,IANL7D,EAMI,EANJA,SACA8D,EAKI,EALJA,WACAC,EAII,EAJJA,mBACA7D,EAGI,EAHJA,QACAkB,EAEI,EAFJA,aACA4C,EACI,EADJA,gBAEA,OACE,cAAC,IAAD,CACE9C,MAAOlB,EACPI,OAAQA,EACRe,aAAc,EACdC,aAAcA,EACdlB,QAASA,EACTmB,YAAU,EACVC,YAAa,CACX2C,OAAQ,SAACzC,GAAD,OACN,cAAC,IAAD,CACEnE,MAAM,OACNC,KAAM4G,IAAQC,UACd/G,QAAS,WACP0G,EAAWtC,GACXwC,GAAgB,OAItBI,SAAU,SAAC5C,GAAD,OACR,cAAC,IAAD,CACEnE,MAAM,SACNC,KAAM4G,IAAQG,SACdjH,QAAS,WACP0G,EAAWtC,GACXuC,GAAmB,W,2BCjB3BO,EAAc,CAClB5D,KAAM,GACNM,UAAW,KACXuD,QAAS,GA6RIC,UA3RE,WAAO,IAAD,EACrB,EAAyBC,YAAe,CAAC,OAAQ,WAAzCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAgC5E,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA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","file":"static/js/15.93e2f766.chunk.js","sourcesContent":["import React from \"react\";\nimport { CButton, CCol, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst ButtonOptionTable = ({ onPress, color, icon }) => {\n  return (\n    <td className=\"py-2\">\n      <CRow className=\"align-items-center\">\n        <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n          <CButton color={color} onClick={onPress}>\n            <CIcon content={icon} size=\"xl\" />\n          </CButton>\n        </CCol>\n      </CRow>\n    </td>\n  );\n};\n\nexport default ButtonOptionTable;\n","const UploadFile = ({ children, value, onChange, disabled, accept }) => {\n  return (\n    <label htmlFor=\"contained-button-file\" className=\"m-0 w-100\">\n      <input\n        value={value}\n        accept={accept}\n        disabled={disabled}\n        style={{ display: \"none\" }}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={disabled ? () => {} : onChange}\n      />\n      {children}\n    </label>\n  );\n};\n\nexport default UploadFile;\n","import { supabase } from \"src/config/configSupabase\";\n\nconst getProducts = (limit) =>\n  supabase\n    .from(\"Product\")\n    .select(\"*\")\n    .limit(limit * 5 + 1)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getProductByIDUser = (UserID) =>\n  supabase\n    .from(\"UserProduct\")\n    .select(\"*,ProductID(*)\")\n    .eq(\"UserID\", UserID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst countProductUsed = (productID) =>\n  supabase\n    .from(\"UserProduct\")\n    .select(\"*\", { count: \"exact\" })\n    .eq(\"ProductID\", productID)\n    .then(({ count }) => count);\n\nexport { getProducts, getProductByIDUser, countProductUsed };\n","import React, { useEffect, useState } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CDataTable,\n  CInput,\n  CRow,\n  CSwitch,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { getProducts } from \"src/state/querys/Product\";\n\nconst SelecteProductsTable = ({\n  type,\n  productsSelected,\n  setProductsSelected,\n}) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fields = [\n    \"Nombre\",\n    \"Precio\",\n    \"activo\",\n    type === \"select\" && \"personalizar_precio\",\n  ];\n  const productEffect = (limit) => {\n    setLoading(true);\n    getProducts(limit).then((productsApi) => {\n      setProducts(\n        productsApi.map((product) => ({\n          ...product,\n          Nombre: product.Name,\n          Precio: new Intl.NumberFormat(\"es-CL\", {\n            currency: \"CLP\",\n            style: \"currency\",\n          }).format(product.BasePrice),\n        }))\n      );\n      setLoading(false);\n    });\n  };\n\n  useEffect(productEffect, []);\n  return (\n    <CDataTable\n      items={products}\n      fields={fields}\n      itemsPerPage={5}\n      onPageChange={productEffect}\n      loading={loading}\n      pagination\n      scopedSlots={{\n        personalizar_precio: (item) =>\n          type === \"select\" && (\n            <td className=\"py-2\">\n              <CCol col=\"4\" xs=\"4\" sm=\"4\" md=\"4\" className=\"mb-2 mb-xl-0\">\n                <CInput\n                  placeholder=\"10.000\"\n                  defaultValue={item.BasePrice}\n                  onChange={({ target: { value } }) =>\n                    setProductsSelected(\n                      productsSelected.map((product) =>\n                        product.ProductID === item.ID\n                          ? { ...product, Price: parseInt(value) }\n                          : { ...product }\n                      )\n                    )\n                  }\n                />\n              </CCol>\n            </td>\n          ),\n        activo: (item) => (\n          <td className=\"py-2\">\n            {type === \"select\" ? (\n              <CRow className=\"align-items-center\" key={item.ID}>\n                <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                  <CSwitch\n                    className={\"mx-1\"}\n                    variant={\"3d\"}\n                    color={\"success\"}\n                    value={\n                      productsSelected.filter(\n                        (product) => item.ID === product.ProductID\n                      ).length === 1\n                    }\n                    checked={\n                      productsSelected.filter(\n                        (product) => item.ID === product.ProductID\n                      ).length === 1\n                    }\n                    onChange={({ target: { checked } }) => {\n                      checked\n                        ? setProductsSelected([\n                            ...productsSelected,\n                            {\n                              UserID: \"\",\n                              ProductID: item.ID,\n                              Price: item.BasePrice,\n                              label: item.Nombre,\n                            },\n                          ])\n                        : setProductsSelected(\n                            productsSelected.filter(\n                              (product) => item.ID !== product.ProductID\n                            )\n                          );\n                    }}\n                  />\n                </CCol>\n              </CRow>\n            ) : (\n              <CRow className=\"align-items-center\">\n                <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                  <CButton\n                    color=\"primary\"\n                    onClick={() => {\n                      //   setProduct(item);\n                      //   setModalVisible(true);\n                    }}\n                  >\n                    <CIcon\n                      name=\"cil-pencil\"\n                      style={{ paddingLeft: 10 }}\n                      customClasses=\"c-sidebar-nav-icon\"\n                    />\n                  </CButton>\n                </CCol>\n                <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                  <CButton\n                    color=\"danger\"\n                    onClick={() => {\n                      //   setProduct(item);\n                      //   setDeleteModal(true);\n                    }}\n                  >\n                    <CIcon\n                      name=\"cil-trash\"\n                      style={{ paddingLeft: 10 }}\n                      customClasses=\"c-sidebar-nav-icon\"\n                    />\n                  </CButton>\n                </CCol>\n              </CRow>\n            )}\n          </td>\n        ),\n      }}\n    />\n  );\n};\n\nexport default SelecteProductsTable;\n","import {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport SelecteProductsTable from \"../Tables/SelecteProductsTable\";\n\nconst SelectProductModal = ({\n  show,\n  setShow,\n  onFinish,\n  productsSelected,\n  setProductsSelected,\n}) => {\n  return (\n    <CModal show={show} onClose={setShow} size=\"lg\">\n      <CModalHeader closeButton>\n        <CModalTitle>\n          Selecciona los productos que quieres asignar a este usuario\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <SelecteProductsTable\n          type={\"select\"}\n          productsSelected={productsSelected}\n          setProductsSelected={setProductsSelected}\n        />\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"success\" onClick={onFinish}>\n          Aceptar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default SelectProductModal;\n","import {\n  CButton,\n  CCol,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React from \"react\";\n\nconst DeleteModal = ({ show, setShow, onFinish }) => {\n  return (\n    <CModal show={show} color=\"danger\" onClose={() => setShow(false)} size=\"sm\">\n      <CModalHeader>\n        <CModalTitle\n          style={{\n            fontWeight: \"bold\",\n            width: \"100%\",\n            textAlign: \"center\",\n          }}\n        >\n          Estas seguro?\n        </CModalTitle>\n      </CModalHeader>\n      <CModalFooter>\n        <CRow style={{ width: \"100%\" }}>\n          <CCol col=\"6\">\n            <CButton\n              color=\"danger\"\n              onClick={onFinish}\n              style={{ fontWeight: \"bold\", width: \"100%\" }}\n            >\n              Si\n            </CButton>\n          </CCol>\n          <CCol col=\"6\">\n            <CButton\n              onClick={() => setShow(false)}\n              color=\"secondary\"\n              style={{ fontWeight: \"bold\", width: \"100%\" }}\n            >\n              No\n            </CButton>\n          </CCol>\n        </CRow>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default DeleteModal;\n","import {\n  CButton,\n  CCol,\n  CForm,\n  CInput,\n  CLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ChargesPayModal = ({ onFinish, show, setShow, nameEdit }) => {\n  const [name, setName] = useState(nameEdit || \"\");\n  const [validated, setValidated] = useState(false);\n\n  useEffect(() => setName(nameEdit || \"\"), [nameEdit]);\n  return (\n    <CModal show={show} onClose={setShow} size=\"sm\">\n      <CForm className={validated ? \"was-validated\" : \"\"}>\n        <CModalHeader>\n          <CModalTitle\n            style={{\n              fontWeight: \"bold\",\n              width: \"100%\",\n              textAlign: \"center\",\n            }}\n          >\n            {`${nameEdit ? \"Editar\" : \"Crear\"} `} Cargo\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CLabel\n            htmlFor=\"name\"\n            style={{\n              fontWeight: \"bold\",\n            }}\n          >\n            Nombre\n          </CLabel>\n          <CInput\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            required\n            onChange={({ target: { value } }) => setName(value)}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CRow style={{ width: \"100%\" }}>\n            <CCol col=\"6\">\n              <CButton\n                color=\"success\"\n                onClick={() => {\n                  if (name === \"\") return setValidated(true);\n\n                  onFinish(name);\n                  setValidated(false);\n                }}\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                {`${nameEdit ? \"Editar\" : \"Crear\"}`}\n              </CButton>\n            </CCol>\n            <CCol col=\"6\">\n              <CButton\n                onClick={() => setShow(false)}\n                color=\"secondary\"\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                Cancelar\n              </CButton>\n            </CCol>\n          </CRow>\n        </CModalFooter>\n      </CForm>\n    </CModal>\n  );\n};\n\nexport default ChargesPayModal;\n","const colorsChart = [\n  \"#FF6633\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n];\n\nexport { colorsChart };\n","const nameStateSpanish = (stateID) => {\n  switch (stateID) {\n    case 1:\n      return \"activo\";\n    case 2:\n      return \"de baja\";\n    case 3:\n      return \"moroso\";\n    case 4:\n      return \"en aprobacion\";\n    case 5:\n      return \"desconexion en proceso\";\n    case 6:\n      return \"activacion en proceso\";\n\n    default:\n      return \"indefinido\";\n  }\n};\n\nexport { nameStateSpanish };\n","import { freeSet } from \"@coreui/icons\";\nimport { CDataTable } from \"@coreui/react\";\nimport React from \"react\";\nimport { ButtonOptionTable } from \"../buttons\";\n\nconst fields = [\n  \"ID\",\n  { key: \"Name\", label: \"nombre\" },\n  { key: \"BasePrice\", label: \"precio\" },\n  \"editar\",\n  \"eliminar\",\n];\n\nconst ProductsTable = ({\n  products,\n  setProduct,\n  setShowDeleteModal,\n  loading,\n  onPageChange,\n  setModalVisible,\n}) => {\n  return (\n    <CDataTable\n      items={products}\n      fields={fields}\n      itemsPerPage={5}\n      onPageChange={onPageChange}\n      loading={loading}\n      pagination\n      scopedSlots={{\n        editar: (item) => (\n          <ButtonOptionTable\n            color=\"info\"\n            icon={freeSet.cilPencil}\n            onPress={() => {\n              setProduct(item);\n              setModalVisible(true);\n            }}\n          />\n        ),\n        eliminar: (item) => (\n          <ButtonOptionTable\n            color=\"danger\"\n            icon={freeSet.cilTrash}\n            onPress={() => {\n              setProduct(item);\n              setShowDeleteModal(true);\n            }}\n          />\n        ),\n      }}\n    />\n  );\n};\n\nexport default ProductsTable;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CTextarea,\n} from \"@coreui/react\";\n\nimport { supabase } from \"src/config/configSupabase\";\nimport { useKeySelector } from \"src/hook/general\";\nimport { createTaskforAdmin } from \"src/state/querys/Tasks\";\nimport { DeleteModal } from \"src/components/Modals\";\nimport ProductsTable from \"src/components/Tables/ProductsTable\";\nimport { countProductUsed, getProducts } from \"src/state/querys/Product\";\nimport { CChartDoughnut } from \"@coreui/react-chartjs\";\nimport { colorsChart } from \"src/utils\";\n\nconst initProduct = {\n  Name: \"\",\n  BasePrice: null,\n  StateID: 1,\n};\nconst Products = () => {\n  const { user, colors } = useKeySelector([\"user\", \"colors\"]);\n  const [products, setProducts] = useState([]);\n  const [noteTask, setNoteTask] = useState(\"\");\n  const [lastProduct, setLastProduct] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [productChart, setProductChart] = useState([]);\n  const [product, setProduct] = useState(initProduct);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const componentDidMount = (limit = 1) => {\n    setLoading(true);\n    getProducts(limit)\n      .then((data) =>\n        Promise.all(\n          data.map(({ ID, Name }) =>\n            countProductUsed(ID).then((count) => ({ count, name: Name }))\n          )\n        ).then((result) => {\n          setProductChart(result);\n          setProducts(data);\n          setLoading(false);\n        })\n      )\n      .catch(console.error);\n  };\n  const createProduct = () => {\n    if (product.Name === \"\" || product.BasePrice === null) {\n      return setValidated(true);\n    }\n\n    if (user.RolID.ID === 7) {\n      return createTaskforAdmin(user.ZoneID[0].AddressID.AddressZoneID, {\n        TypeID: product.ID ? 6 : 7,\n        ClientID: user.ID,\n        Note: noteTask,\n        Data: product,\n        LastData: lastProduct,\n      }).then(() => {\n        setLoading(false);\n        componentDidMount();\n        setModalVisible(false);\n        setNoteTask(\"\");\n        setLastProduct(null);\n        setProduct(initProduct);\n        setValidated(false);\n      });\n    }\n\n    if (product.ID)\n      return supabase\n        .from(\"Product\")\n        .upsert(product)\n        .then(() => {\n          setLoading(false);\n          componentDidMount();\n          setModalVisible(false);\n          setProduct(initProduct);\n          setValidated(false);\n        });\n\n    setLoading(true);\n    return supabase\n      .from(\"Product\")\n      .insert(product)\n      .then(() => {\n        setLoading(false);\n        componentDidMount();\n        setModalVisible(false);\n        setProduct(initProduct);\n        setValidated(false);\n      });\n  };\n  const deleteProduct = () =>\n    supabase\n      .from(\"Product\")\n      .delete()\n      .match({ ID: product.ID })\n      .then(() => {\n        setLoading(false);\n        componentDidMount();\n        setShowDeleteModal(false);\n        setProduct(initProduct);\n        setValidated(false);\n      });\n\n  useEffect(componentDidMount, []);\n  return (\n    <CForm className={validated ? \"was-validated\" : \"\"}>\n      <CRow className=\"align-items-center\" style={{ marginBottom: 16 }}>\n        <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-3 mb-xl-0\">\n          <CButton\n            onClick={() => setModalVisible(true)}\n            style={{\n              backgroundColor: colors.primary,\n              color: \"#fff\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Crear Productos\n          </CButton>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader\n              style={{\n                backgroundColor: colors.primary,\n                color: \"#fff\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Productos\n            </CCardHeader>\n            <CCardBody>\n              <ProductsTable\n                products={products}\n                setProduct={setProduct}\n                onPageChange={componentDidMount}\n                setShowDeleteModal={setShowDeleteModal}\n                setModalVisible={setModalVisible}\n                loading={loading}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" lg=\"6\">\n          <CCard>\n            <CCardHeader\n              style={{\n                backgroundColor: colors.primary,\n                color: \"#fff\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Grafica de los Productos mas utilizados\n            </CCardHeader>\n            {productChart.length > 0 && (\n              <CCardBody>\n                <CChartDoughnut\n                  datasets={[\n                    {\n                      backgroundColor: colorsChart,\n                      data: productChart.map(({ count }) => count),\n                    },\n                  ]}\n                  labels={productChart.map(({ name }) => name)}\n                  options={{\n                    tooltips: {\n                      enabled: true,\n                    },\n                  }}\n                />\n              </CCardBody>\n            )}\n          </CCard>\n        </CCol>\n      </CRow>\n      <DeleteModal\n        show={showDeleteModal}\n        setShow={setShowDeleteModal}\n        onFinish={deleteProduct}\n      />\n      <CModal\n        show={modalVisible}\n        onClose={() => {\n          setProduct({\n            Name: \"\",\n            BasePrice: 0,\n          });\n          setModalVisible(!modalVisible);\n        }}\n        size=\"sm\"\n      >\n        <CModalHeader>\n          <CModalTitle\n            style={{\n              fontWeight: \"bold\",\n              width: \"100%\",\n              textAlign: \"center\",\n            }}\n          >{`${product.ID ? \"Editar\" : \"Crear\"} Producto`}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel\n                  htmlFor=\"product\"\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Nombre\n                </CLabel>\n                <CInput\n                  id=\"product\"\n                  placeholder=\"ingresa el nombre del producto\"\n                  value={product.Name}\n                  onChange={({ target: { value } }) =>\n                    setProduct({ ...product, Name: value })\n                  }\n                  required\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel\n                  htmlFor=\"priceBase\"\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Precio Base\n                </CLabel>\n                <CInput\n                  id=\"priceBase\"\n                  value={product.BasePrice}\n                  onChange={({ target: { value } }) =>\n                    setProduct({ ...product, BasePrice: value })\n                  }\n                  placeholder=\"$50.000\"\n                  required\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n          {user?.RolID?.ID === 7 && (\n            <CRow>\n              <CCol xs=\"12\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"priceBase\">\n                    Nota para el administrador\n                  </CLabel>\n                  <CTextarea\n                    id=\"name\"\n                    value={noteTask}\n                    onChange={({ target: { value } }) => setNoteTask(value)}\n                  />\n                </CFormGroup>\n              </CCol>\n            </CRow>\n          )}\n        </CModalBody>\n        <CModalFooter>\n          <CRow style={{ width: \"100%\" }}>\n            <CCol col=\"6\">\n              <CButton\n                color=\"success\"\n                onClick={createProduct}\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                {product.ID ? \"Editar\" : \"Crear\"}\n              </CButton>\n            </CCol>\n            <CCol col=\"6\">\n              <CButton\n                color=\"secondary\"\n                onClick={() => {\n                  setProduct({\n                    Name: \"\",\n                    BasePrice: 0,\n                  });\n                  setModalVisible(!modalVisible);\n                }}\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                Cancelar\n              </CButton>\n            </CCol>\n          </CRow>\n        </CModalFooter>\n      </CModal>\n    </CForm>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}