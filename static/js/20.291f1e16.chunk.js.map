{"version":3,"sources":["components/buttons/ButtonOptionTable.js","components/buttons/UploadFile.js","state/querys/Product.js","components/Tables/SelecteProductsTable.js","components/Modals/SelectProductModal.js","components/Modals/DeleteModal.js","components/Modals/ChargesPayModal.js","components/Tables/UsersTable.js","views/admin/UsersProducts.js"],"names":["ButtonOptionTable","onPress","color","icon","className","col","xs","sm","md","onClick","content","size","UploadFile","children","value","onChange","disabled","accept","htmlFor","style","display","id","multiple","type","getProducts","limit","supabase","from","select","then","snapshot","data","catch","console","error","getProductByIDUser","UserID","eq","countProductUsed","productID","count","SelecteProductsTable","productsSelected","setProductsSelected","useState","products","setProducts","loading","setLoading","fields","productEffect","productsApi","map","product","Nombre","Name","Precio","Intl","NumberFormat","currency","format","BasePrice","useEffect","items","itemsPerPage","onPageChange","pagination","scopedSlots","personalizar_precio","item","placeholder","defaultValue","target","ProductID","ID","Price","parseInt","activo","variant","filter","length","checked","label","name","paddingLeft","customClasses","SelectProductModal","show","setShow","onFinish","onClose","closeButton","DeleteModal","fontWeight","width","textAlign","ChargesPayModal","nameEdit","setName","validated","setValidated","required","UsersTable","handleClient","users","setUsers","searchText","setSearchText","usersEffect","getUsersClients","usersResponse","user","nombre","Names","LastName","rut","Rut","numero_de_contacto","PhoneNumber","debounceFilter","useCallback","_","debounce","number","tableFilter","striped","onTableFilterChange","productos","freeSet","cilListRich","UsersProducts","colors","useKeySelector","showModal","setShowModal","userID","setUserID","lg","backgroundColor","primary","IDUser","Promise","all","updateUserProduct","createUserProduct"],"mappings":"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","file":"static/js/20.291f1e16.chunk.js","sourcesContent":["import React from \"react\";\nimport { CButton, CCol, CRow } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\n\nconst ButtonOptionTable = ({ onPress, color, icon }) => {\n  return (\n    <td className=\"py-2\">\n      <CRow className=\"align-items-center\">\n        <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n          <CButton color={color} onClick={onPress}>\n            <CIcon content={icon} size=\"xl\" />\n          </CButton>\n        </CCol>\n      </CRow>\n    </td>\n  );\n};\n\nexport default ButtonOptionTable;\n","const UploadFile = ({ children, value, onChange, disabled, accept }) => {\n  return (\n    <label htmlFor=\"contained-button-file\" className=\"m-0 w-100\">\n      <input\n        value={value}\n        accept={accept}\n        disabled={disabled}\n        style={{ display: \"none\" }}\n        id=\"contained-button-file\"\n        multiple\n        type=\"file\"\n        onChange={disabled ? () => {} : onChange}\n      />\n      {children}\n    </label>\n  );\n};\n\nexport default UploadFile;\n","import { supabase } from \"src/config/configSupabase\";\n\nconst getProducts = (limit) =>\n  supabase\n    .from(\"Product\")\n    .select(\"*\")\n    .limit(limit * 5 + 1)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getProductByIDUser = (UserID) =>\n  supabase\n    .from(\"UserProduct\")\n    .select(\"*,ProductID(*)\")\n    .eq(\"UserID\", UserID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst countProductUsed = (productID) =>\n  supabase\n    .from(\"UserProduct\")\n    .select(\"*\", { count: \"exact\" })\n    .eq(\"ProductID\", productID)\n    .then(({ count }) => count);\n\nexport { getProducts, getProductByIDUser, countProductUsed };\n","import React, { useEffect, useState } from \"react\";\nimport {\n  CButton,\n  CCol,\n  CDataTable,\n  CInput,\n  CRow,\n  CSwitch,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { getProducts } from \"src/state/querys/Product\";\n\nconst SelecteProductsTable = ({\n  type,\n  productsSelected,\n  setProductsSelected,\n}) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fields = [\n    \"Nombre\",\n    \"Precio\",\n    \"activo\",\n    type === \"select\" && \"personalizar_precio\",\n  ];\n  const productEffect = (limit) => {\n    setLoading(true);\n    getProducts(limit).then((productsApi) => {\n      setProducts(\n        productsApi.map((product) => ({\n          ...product,\n          Nombre: product.Name,\n          Precio: new Intl.NumberFormat(\"es-CL\", {\n            currency: \"CLP\",\n            style: \"currency\",\n          }).format(product.BasePrice),\n        }))\n      );\n      setLoading(false);\n    });\n  };\n\n  useEffect(productEffect, []);\n  return (\n    <CDataTable\n      items={products}\n      fields={fields}\n      itemsPerPage={5}\n      onPageChange={productEffect}\n      loading={loading}\n      pagination\n      scopedSlots={{\n        personalizar_precio: (item) =>\n          type === \"select\" && (\n            <td className=\"py-2\">\n              <CCol col=\"4\" xs=\"4\" sm=\"4\" md=\"4\" className=\"mb-2 mb-xl-0\">\n                <CInput\n                  placeholder=\"10.000\"\n                  defaultValue={item.BasePrice}\n                  onChange={({ target: { value } }) =>\n                    setProductsSelected(\n                      productsSelected.map((product) =>\n                        product.ProductID === item.ID\n                          ? { ...product, Price: parseInt(value) }\n                          : { ...product }\n                      )\n                    )\n                  }\n                />\n              </CCol>\n            </td>\n          ),\n        activo: (item) => (\n          <td className=\"py-2\">\n            {type === \"select\" ? (\n              <CRow className=\"align-items-center\" key={item.ID}>\n                <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                  <CSwitch\n                    className={\"mx-1\"}\n                    variant={\"3d\"}\n                    color={\"success\"}\n                    value={\n                      productsSelected.filter(\n                        (product) => item.ID === product.ProductID\n                      ).length === 1\n                    }\n                    checked={\n                      productsSelected.filter(\n                        (product) => item.ID === product.ProductID\n                      ).length === 1\n                    }\n                    onChange={({ target: { checked } }) => {\n                      checked\n                        ? setProductsSelected([\n                            ...productsSelected,\n                            {\n                              UserID: \"\",\n                              ProductID: item.ID,\n                              Price: item.BasePrice,\n                              label: item.Nombre,\n                            },\n                          ])\n                        : setProductsSelected(\n                            productsSelected.filter(\n                              (product) => item.ID !== product.ProductID\n                            )\n                          );\n                    }}\n                  />\n                </CCol>\n              </CRow>\n            ) : (\n              <CRow className=\"align-items-center\">\n                <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                  <CButton\n                    color=\"primary\"\n                    onClick={() => {\n                      //   setProduct(item);\n                      //   setModalVisible(true);\n                    }}\n                  >\n                    <CIcon\n                      name=\"cil-pencil\"\n                      style={{ paddingLeft: 10 }}\n                      customClasses=\"c-sidebar-nav-icon\"\n                    />\n                  </CButton>\n                </CCol>\n                <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                  <CButton\n                    color=\"danger\"\n                    onClick={() => {\n                      //   setProduct(item);\n                      //   setDeleteModal(true);\n                    }}\n                  >\n                    <CIcon\n                      name=\"cil-trash\"\n                      style={{ paddingLeft: 10 }}\n                      customClasses=\"c-sidebar-nav-icon\"\n                    />\n                  </CButton>\n                </CCol>\n              </CRow>\n            )}\n          </td>\n        ),\n      }}\n    />\n  );\n};\n\nexport default SelecteProductsTable;\n","import {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport SelecteProductsTable from \"../Tables/SelecteProductsTable\";\n\nconst SelectProductModal = ({\n  show,\n  setShow,\n  onFinish,\n  productsSelected,\n  setProductsSelected,\n}) => {\n  return (\n    <CModal show={show} onClose={setShow} size=\"lg\">\n      <CModalHeader closeButton>\n        <CModalTitle>\n          Selecciona los productos que quieres asignar a este usuario\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <SelecteProductsTable\n          type={\"select\"}\n          productsSelected={productsSelected}\n          setProductsSelected={setProductsSelected}\n        />\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"success\" onClick={onFinish}>\n          Aceptar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default SelectProductModal;\n","import {\n  CButton,\n  CCol,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React from \"react\";\n\nconst DeleteModal = ({ show, setShow, onFinish }) => {\n  return (\n    <CModal show={show} color=\"danger\" onClose={() => setShow(false)} size=\"sm\">\n      <CModalHeader>\n        <CModalTitle\n          style={{\n            fontWeight: \"bold\",\n            width: \"100%\",\n            textAlign: \"center\",\n          }}\n        >\n          Estas seguro?\n        </CModalTitle>\n      </CModalHeader>\n      <CModalFooter>\n        <CRow style={{ width: \"100%\" }}>\n          <CCol col=\"6\">\n            <CButton\n              color=\"danger\"\n              onClick={onFinish}\n              style={{ fontWeight: \"bold\", width: \"100%\" }}\n            >\n              Si\n            </CButton>\n          </CCol>\n          <CCol col=\"6\">\n            <CButton\n              onClick={() => setShow(false)}\n              color=\"secondary\"\n              style={{ fontWeight: \"bold\", width: \"100%\" }}\n            >\n              No\n            </CButton>\n          </CCol>\n        </CRow>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default DeleteModal;\n","import {\n  CButton,\n  CCol,\n  CForm,\n  CInput,\n  CLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ChargesPayModal = ({ onFinish, show, setShow, nameEdit }) => {\n  const [name, setName] = useState(nameEdit || \"\");\n  const [validated, setValidated] = useState(false);\n\n  useEffect(() => setName(nameEdit || \"\"), [nameEdit]);\n  return (\n    <CModal show={show} onClose={setShow} size=\"sm\">\n      <CForm className={validated ? \"was-validated\" : \"\"}>\n        <CModalHeader>\n          <CModalTitle\n            style={{\n              fontWeight: \"bold\",\n              width: \"100%\",\n              textAlign: \"center\",\n            }}\n          >\n            {`${nameEdit ? \"Editar\" : \"Crear\"} `} Cargo\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CLabel\n            htmlFor=\"name\"\n            style={{\n              fontWeight: \"bold\",\n            }}\n          >\n            Nombre\n          </CLabel>\n          <CInput\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            required\n            onChange={({ target: { value } }) => setName(value)}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CRow style={{ width: \"100%\" }}>\n            <CCol col=\"6\">\n              <CButton\n                color=\"success\"\n                onClick={() => {\n                  if (name === \"\") return setValidated(true);\n\n                  onFinish(name);\n                  setValidated(false);\n                }}\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                {`${nameEdit ? \"Editar\" : \"Crear\"}`}\n              </CButton>\n            </CCol>\n            <CCol col=\"6\">\n              <CButton\n                onClick={() => setShow(false)}\n                color=\"secondary\"\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                Cancelar\n              </CButton>\n            </CCol>\n          </CRow>\n        </CModalFooter>\n      </CForm>\n    </CModal>\n  );\n};\n\nexport default ChargesPayModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport { freeSet } from \"@coreui/icons\";\nimport { CDataTable } from \"@coreui/react\";\nimport _ from \"lodash\";\n\nimport { getUsersClients } from \"src/state/querys/Users\";\nimport { ButtonOptionTable } from \"../buttons\";\n\nconst fields = [\"nombre\", \"rut\", \"numero_de_contacto\", \"productos\"];\n\nconst UsersTable = ({ handleClient }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const usersEffect = (value = \"\", limit = 1) => {\n    setLoading(true);\n    setSearchText(value);\n    getUsersClients(limit, value).then((usersResponse) => {\n      setUsers(\n        usersResponse.map((user) => ({\n          ID: user.ID,\n          nombre: `${user.Names} ${user.LastName}`,\n          rut: user.Rut,\n          numero_de_contacto: user.PhoneNumber,\n        }))\n      );\n      setLoading(false);\n    });\n  };\n  const debounceFilter = useCallback(\n    (value, limit) => _.debounce(usersEffect(value, limit), 1000),\n    []\n  );\n\n  useEffect(usersEffect, []);\n  return (\n    <CDataTable\n      items={users}\n      fields={fields}\n      itemsPerPage={5}\n      onPageChange={(number) => usersEffect(searchText, number)}\n      loading={loading}\n      pagination\n      tableFilter={{\n        placeholder: \"rut\",\n        label: \"Filtrar\",\n      }}\n      striped\n      onTableFilterChange={debounceFilter}\n      scopedSlots={{\n        productos: (item) => (\n          <ButtonOptionTable\n            color=\"secondary\"\n            icon={freeSet.cilListRich}\n            onPress={() => handleClient(item.ID)}\n          />\n        ),\n      }}\n    />\n  );\n};\n\nexport default UsersTable;\n","import { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport React, { useState } from \"react\";\n\nimport UsersTable from \"src/components/Tables/UsersTable\";\nimport { SelectProductModal } from \"src/components/Modals\";\nimport { getProductByIDUser } from \"src/state/querys/Product\";\nimport { createUserProduct, updateUserProduct } from \"src/state/querys/Users\";\nimport { useKeySelector } from \"src/hook/general\";\n\nconst UsersProducts = () => {\n  const { colors } = useKeySelector([\"colors\"]);\n  const [showModal, setShowModal] = useState(false);\n  const [productsSelected, setProductsSelected] = useState([]);\n  const [userID, setUserID] = useState(\"\");\n\n  const handleClient = (IDUser) => {\n    getProductByIDUser(IDUser).then((products) => {\n      setProductsSelected(\n        products.map((product) => ({\n          ProductID: product.ProductID.ID,\n          Price: product.ProductID.BasePrice,\n          ID: product.ID,\n        }))\n      );\n      setUserID(IDUser);\n      setShowModal(true);\n    });\n  };\n  const onFinish = () => {\n    Promise.all(\n      productsSelected.map((product) =>\n        product.ID\n          ? updateUserProduct({ ...product, UserID: userID })\n          : createUserProduct({ ...product, UserID: userID })\n      )\n    ).then(() => {\n      setShowModal(false);\n      setProductsSelected([]);\n      setUserID(\"\");\n    });\n  };\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" sm=\"6\" lg=\"12\">\n          <CCard>\n            <CCardHeader\n              style={{\n                backgroundColor: colors.primary,\n                color: \"#fff\",\n                fontWeight: \"bold\",\n              }}\n            >\n              clientes\n            </CCardHeader>\n            <CCardBody>\n              <UsersTable handleClient={handleClient} />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <SelectProductModal\n        show={showModal}\n        setShow={() => setShowModal(false)}\n        onFinish={onFinish}\n        setProductsSelected={setProductsSelected}\n        productsSelected={productsSelected}\n      />\n    </>\n  );\n};\n\nexport default UsersProducts;\n"],"sourceRoot":""}