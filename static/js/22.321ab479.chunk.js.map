{"version":3,"sources":["components/Modals/SelectProductModal.js","components/Modals/DeleteModal.js","components/Modals/ChargesPayModal.js","utils/colors.js","utils/general.js","views/base/tables/Tables.js"],"names":["SelectProductModal","show","setShow","onFinish","productsSelected","setProductsSelected","onClose","size","closeButton","SelecteProductsTable","type","color","onClick","DeleteModal","style","fontWeight","width","textAlign","col","ChargesPayModal","nameEdit","useState","name","setName","validated","setValidated","useEffect","className","htmlFor","id","value","required","onChange","target","colorsChart","nameStateSpanish","stateID","fields","key","label","Tables","history","useHistory","dispatch","useDispatch","useKeySelector","userSession","user","colors","creatingUser","setCreatingUser","chargesAutomaticModal","setChargesAutomaticModal","userStates","setUserStates","users","setUsers","setUser","searchText","setSearchText","loading","setLoading","modalVisibleDiscounts","setModalVisible","modalVisibleCharges","setModalVisibleCharges","stateFilterSelected","setStateFilterSelected","addressOptions","setAddressOptions","showModalUnsubscribedConfirm","setShowModalUnsubscribedConfirm","unsubscribedSelected","setUnsubscribedSelected","showModalSubscribedConfirm","setShowModalSubscribedConfirm","showModalSubscribedProcess","setShowModalSubscribedProcess","addressFilterLoading","setaddressFilterLoading","addressSelected","setAddressSelected","handleSearchUser","limit","test","format","replace","undefined","userEffect","getUserBySearch","then","usersApi","filter","StateID","map","nombres","Names","apellidos","LastName","contacto","PhoneNumber","addressName","refUser","supabase","from","select","eq","snapshot","data","estado","getStateName","catch","console","error","getBadge","status","debounceFilter","useCallback","_","debounce","debounceFilterAddress","getAddressNames","results","uniq","result","Address","AddressName","address","getUserStates","xs","lg","marginBottom","backgroundColor","primary","height","fontSize","RolID","ID","display","borderRadius","alignHorizontal","custom","state","classNamePrefix","onInputChange","isLoading","isClearable","isSearchable","options","items","sorter","onPageChange","number","pagination","tableFilter","placeholder","itemsPerPage","selectable","onTableFilterChange","scopedSlots","editar","item","sm","md","zIndex","content","freeSet","cilPencil","datos","push","cilUser","unsubscribed","cilArrowBottom","cilArrowTop","isVisible","userID","justifyContent","chargeAutomatic","payload","setTimeout","unsubscribedProcessUser","ZoneID","AddressID","AddressZoneID","updateUserID","finishTaskProcessUnSubscribe","subscribedProcessUser"],"mappings":"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","file":"static/js/22.321ab479.chunk.js","sourcesContent":["import {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport React from \"react\";\nimport SelecteProductsTable from \"../Tables/SelecteProductsTable\";\n\nconst SelectProductModal = ({\n  show,\n  setShow,\n  onFinish,\n  productsSelected,\n  setProductsSelected,\n}) => {\n  return (\n    <CModal show={show} onClose={setShow} size=\"lg\">\n      <CModalHeader closeButton>\n        <CModalTitle>\n          Selecciona los productos que quieres asignar a este usuario\n        </CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <SelecteProductsTable\n          type={\"select\"}\n          productsSelected={productsSelected}\n          setProductsSelected={setProductsSelected}\n        />\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"success\" onClick={onFinish}>\n          Aceptar\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default SelectProductModal;\n","import {\n  CButton,\n  CCol,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React from \"react\";\n\nconst DeleteModal = ({ show, setShow, onFinish }) => {\n  return (\n    <CModal show={show} color=\"danger\" onClose={() => setShow(false)} size=\"sm\">\n      <CModalHeader>\n        <CModalTitle\n          style={{\n            fontWeight: \"bold\",\n            width: \"100%\",\n            textAlign: \"center\",\n          }}\n        >\n          Estas seguro?\n        </CModalTitle>\n      </CModalHeader>\n      <CModalFooter>\n        <CRow style={{ width: \"100%\" }}>\n          <CCol col=\"6\">\n            <CButton\n              color=\"danger\"\n              onClick={onFinish}\n              style={{ fontWeight: \"bold\", width: \"100%\" }}\n            >\n              Si\n            </CButton>\n          </CCol>\n          <CCol col=\"6\">\n            <CButton\n              onClick={() => setShow(false)}\n              color=\"secondary\"\n              style={{ fontWeight: \"bold\", width: \"100%\" }}\n            >\n              No\n            </CButton>\n          </CCol>\n        </CRow>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default DeleteModal;\n","import {\n  CButton,\n  CCol,\n  CForm,\n  CInput,\n  CLabel,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ChargesPayModal = ({ onFinish, show, setShow, nameEdit }) => {\n  const [name, setName] = useState(nameEdit || \"\");\n  const [validated, setValidated] = useState(false);\n\n  useEffect(() => setName(nameEdit || \"\"), [nameEdit]);\n  return (\n    <CModal show={show} onClose={setShow} size=\"sm\">\n      <CForm className={validated ? \"was-validated\" : \"\"}>\n        <CModalHeader>\n          <CModalTitle\n            style={{\n              fontWeight: \"bold\",\n              width: \"100%\",\n              textAlign: \"center\",\n            }}\n          >\n            {`${nameEdit ? \"Editar\" : \"Crear\"} `} Cargo\n          </CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CLabel\n            htmlFor=\"name\"\n            style={{\n              fontWeight: \"bold\",\n            }}\n          >\n            Nombre\n          </CLabel>\n          <CInput\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            required\n            onChange={({ target: { value } }) => setName(value)}\n          />\n        </CModalBody>\n        <CModalFooter>\n          <CRow style={{ width: \"100%\" }}>\n            <CCol col=\"6\">\n              <CButton\n                color=\"success\"\n                onClick={() => {\n                  if (name === \"\") return setValidated(true);\n\n                  onFinish(name);\n                  setValidated(false);\n                }}\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                {`${nameEdit ? \"Editar\" : \"Crear\"}`}\n              </CButton>\n            </CCol>\n            <CCol col=\"6\">\n              <CButton\n                onClick={() => setShow(false)}\n                color=\"secondary\"\n                style={{ fontWeight: \"bold\", width: \"100%\" }}\n              >\n                Cancelar\n              </CButton>\n            </CCol>\n          </CRow>\n        </CModalFooter>\n      </CForm>\n    </CModal>\n  );\n};\n\nexport default ChargesPayModal;\n","const colorsChart = [\n  \"#FF6633\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n];\n\nexport { colorsChart };\n","const nameStateSpanish = (stateID) => {\n  switch (stateID) {\n    case 1:\n      return \"activo\";\n    case 2:\n      return \"de baja\";\n    case 3:\n      return \"moroso\";\n    case 4:\n      return \"en aprobacion\";\n    case 5:\n      return \"desconexion en proceso\";\n    case 6:\n      return \"activacion en proceso\";\n\n    default:\n      return \"indefinido\";\n  }\n};\n\nexport { nameStateSpanish };\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModalFooter,\n  CLabel,\n  CModalTitle,\n  CModalHeader,\n  CModal,\n  CSelect,\n} from \"@coreui/react\";\n\n// import users from \"../../users/users\";\nimport { supabase } from \"src/config/configSupabase\";\nimport _ from \"lodash\";\nimport Select from \"react-select\";\nimport CIcon from \"@coreui/icons-react\";\nimport { freeSet } from \"@coreui/icons\";\nimport Discounts from \"./Discounts\";\nimport Charges from \"./Charges\";\nimport { useHistory } from \"react-router\";\nimport { chargeAutomatic } from \"src/state/querys/Charges\";\nimport { format } from \"rut.js\";\nimport { useKeySelector } from \"src/hook/general\";\nimport {\n  getUserBySearch,\n  getUserStates,\n  subscribedProcessUser,\n  unsubscribedProcessUser,\n  updateUserID,\n} from \"src/state/querys/Users\";\nimport { DeleteModal } from \"src/components/Modals\";\nimport { finishTaskProcessUnSubscribe } from \"src/state/querys/Tasks\";\nimport { nameStateSpanish } from \"src/utils\";\nimport { getAddressNames } from \"src/state/querys/Zones\";\nimport { useDispatch } from \"react-redux\";\nimport FormUser from \"src/views/buttons/form/Form\";\n\nconst fields = [\n  \"ID\",\n  \"nombres\",\n  \"apellidos\",\n  \"Rut\",\n  // \"JobID\",\n  // \"AddressName\",\n  // \"AddressNumber\",\n  // \"AddressBlockNumber\",\n  // \"AddressFloorNumber\",\n  // \"AddressApartmentNumber\",\n  \"contacto\",\n  // \"JobPhoneNumber\",\n  // \"AddressZoneID\",\n  // \"AddressArea\",\n  // \"UnsuscribeReason\",\n  // \"SellerID\",\n  // \"TechnicianID\",\n  // \"A_N_BOCAS\",\n  // \"A_COEFICIE\",\n  // \"StateID\",\n  // \"A_REPACTAD\",\n  // \"A_RECONNCET\",\n  // \"A_FE_RECON\",\n  // \"A_CONDONAD\",\n  // \"A_PROMOCIO\",\n  // \"A_FE_PROMO\",\n  // \"A_D_PLAZO\",\n  // \"D_8\",\n  // \"FechCon\",\n  // \"AltaAdm\",\n  // \"BajaAdm\",\n  // \"AltaTec\",\n  // \"BajaTec\",\n  // \"A_FE_REPAC\",\n  { key: \"estado\" },\n  \"editar\",\n  \"datos\",\n  { key: \"unsubscribed\", label: \"opciones\" },\n];\n\nconst Tables = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { user: userSession, colors } = useKeySelector([\"user\", \"colors\"]);\n  const [creatingUser, setCreatingUser] = useState(false);\n  const [chargesAutomaticModal, setChargesAutomaticModal] = useState(false);\n  const [userStates, setUserStates] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [searchText, setSearchText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [modalVisibleDiscounts, setModalVisible] = useState(false);\n  const [modalVisibleCharges, setModalVisibleCharges] = useState(false);\n  const [stateFilterSelected, setStateFilterSelected] = useState(1);\n  const [addressOptions, setAddressOptions] = useState([]);\n  const [showModalUnsubscribedConfirm, setShowModalUnsubscribedConfirm] =\n    useState(false);\n  const [unsubscribedSelected, setUnsubscribedSelected] = useState();\n  const [showModalSubscribedConfirm, setShowModalSubscribedConfirm] =\n    useState(false);\n  const [showModalSubscribedProcess, setShowModalSubscribedProcess] =\n    useState(false);\n\n  const [addressFilterLoading, setaddressFilterLoading] = useState(false);\n  const [addressSelected, setAddressSelected] = useState();\n\n  const handleSearchUser = (value, limit) => {\n    setSearchText(\n      /^[0-9]*$/.test(value) ? format(value).replace(/\\./g, \"\") : value\n    );\n    if (value === undefined || value === \"\") return userEffect();\n    setLoading(true);\n\n    getUserBySearch(value, limit).then((usersApi) => {\n      setUsers(\n        usersApi\n          .filter(({ StateID }) => StateID !== \"4\")\n          .map((user) => ({\n            ...user,\n            nombres: user.Names,\n            apellidos: user.LastName,\n            contacto: user.PhoneNumber,\n          }))\n      );\n      setLoading(false);\n    });\n  };\n  const userEffect = (limit = 1, addressName) => {\n    setLoading(true);\n    let refUser = supabase\n      .from(\"User\")\n      .select(\"*,Address!inner(*)\")\n      .eq(\"RolID\", 2)\n      .limit(limit * 5 + 1);\n\n    if (stateFilterSelected !== \"0\") refUser.eq(\"StateID\", stateFilterSelected);\n    if (addressName) refUser.eq(\"Address.AddressName\", addressName);\n\n    refUser\n      .then((snapshot) => {\n        setUsers(\n          snapshot.data\n            .filter(({ StateID }) => StateID !== \"4\")\n            .map((user) => ({\n              ...user,\n              nombres: user.Names,\n              apellidos: user.LastName,\n              contacto: user.PhoneNumber,\n              estado: getStateName(user.StateID),\n            }))\n        );\n        setLoading(false);\n      })\n      .catch(console.error);\n  };\n\n  const componentDidMount = () => {\n    getUserStates().then(setUserStates);\n  };\n\n  const onFinishUnsubscribedProcess = () => {\n    unsubscribedProcessUser(\n      unsubscribedSelected,\n      userSession.ZoneID[0].AddressID.AddressZoneID\n    ).then(() => {\n      setUnsubscribedSelected({});\n      setShowModalUnsubscribedConfirm(false);\n      userEffect();\n    });\n  };\n  const onFinishSubscribedProcess = () =>\n    subscribedProcessUser(\n      unsubscribedSelected,\n      userSession.ZoneID[0].AddressID.AddressZoneID\n    ).then(() => {\n      setUnsubscribedSelected({});\n      setShowModalSubscribedProcess(false);\n      userEffect();\n    });\n  const onFinishSubscribed = () =>\n    updateUserID({ ID: unsubscribedSelected, StateID: 1 }).then(() => {\n      finishTaskProcessUnSubscribe(unsubscribedSelected);\n      setUnsubscribedSelected({});\n      setShowModalSubscribedConfirm(false);\n      userEffect();\n    });\n\n  const getBadge = (status) => {\n    switch (status) {\n      case \"1\":\n        return \"success\";\n      case \"2\":\n        return \"danger\";\n      case \"3\":\n        return \"info\";\n      case \"5\":\n        return \"danger\";\n      case \"6\":\n        return \"info\";\n      default:\n        return \"default\";\n    }\n  };\n  const getStateName = (StateID) => {\n    switch (StateID) {\n      case \"1\":\n        return \"Activado\";\n      case \"2\":\n        return \"De Baja\";\n      case \"3\":\n        return \"Moroso\";\n      case \"5\":\n        return \"Proceso de baja\";\n      case \"6\":\n        return \"Reconexion\";\n      default:\n        return \"Indefinido\";\n    }\n  };\n  const filterAddress = (value) => {\n    setaddressFilterLoading(false);\n    getAddressNames(value).then((results) => {\n      setAddressOptions(\n        _.uniq(results.map((result) => result.Address.AddressName)).map(\n          (address) => ({ value: address, label: address })\n        )\n      );\n      setaddressFilterLoading(false);\n    });\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceFilter = useCallback(_.debounce(handleSearchUser, 1000), []);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceFilterAddress = useCallback(\n    _.debounce(filterAddress, 1000),\n    []\n  );\n\n  useEffect(userEffect, [stateFilterSelected]);\n  useEffect(componentDidMount, []);\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          {creatingUser ? (\n            <CButton\n              color=\"primary\"\n              style={{ marginBottom: 10, backgroundColor: colors.primary }}\n              onClick={() => {\n                setUser({});\n                setCreatingUser(false);\n              }}\n            >\n              <CIcon\n                color=\"white\"\n                name=\"cil-arrow-left\"\n                size=\"lg\"\n                height={20}\n              />\n            </CButton>\n          ) : (\n            <CRow>\n              <CCol>\n                <CButton\n                  onClick={() => setCreatingUser(true)}\n                  style={{\n                    marginBottom: 10,\n                    backgroundColor: colors.primary,\n                    color: \"#fff\",\n                    fontSize: 16,\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Crear Usuario\n                </CButton>\n              </CCol>\n              {userSession?.RolID?.ID === 8 && (\n                <CCol>\n                  <CButton\n                    onClick={() => setChargesAutomaticModal(true)}\n                    style={{ marginBottom: 10 }}\n                    size=\"md\"\n                    color=\"success\"\n                  >\n                    Crear Cobro automatico\n                  </CButton>\n                </CCol>\n              )}\n            </CRow>\n          )}\n          <div style={{ display: creatingUser ? \"none\" : \"block\" }}>\n            <CCard style={{ borderRadius: 20 }}>\n              <CCardHeader\n                style={{\n                  backgroundColor: colors.primary,\n                  color: \"#fff\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                  textAlign: \"center\",\n                }}\n              >\n                Usuarios\n              </CCardHeader>\n              <CCardBody>\n                <CRow alignHorizontal=\"end\">\n                  <CCol xs=\"12\" lg=\"2\">\n                    <CLabel style={{ fontWeight: \"bold\" }}>\n                      Filtrar por estado:\n                    </CLabel>\n                    <CSelect\n                      custom\n                      name=\"select-user-states\"\n                      id=\"select-user-states\"\n                      value={stateFilterSelected}\n                      onChange={({ target: { value } }) => {\n                        setStateFilterSelected(value);\n                      }}\n                    >\n                      <option value={0}>Todos</option>\n                      {userStates.map((state) => (\n                        <option value={state.ID}>\n                          {nameStateSpanish(state.ID)}\n                        </option>\n                      ))}\n                    </CSelect>\n                  </CCol>\n                  <CCol xs=\"12\" lg=\"2\">\n                    <CLabel style={{ fontWeight: \"bold\" }}>\n                      Filtrar por dirección:\n                    </CLabel>\n                    <Select\n                      className=\"basic-single\"\n                      classNamePrefix=\"select\"\n                      onInputChange={debounceFilterAddress}\n                      onChange={(value) => {\n                        setAddressSelected(value?.value);\n                        userEffect(1, value?.value);\n                      }}\n                      isLoading={addressFilterLoading}\n                      isClearable={true}\n                      isSearchable={true}\n                      name=\"color\"\n                      options={addressOptions}\n                    />\n                  </CCol>\n                </CRow>\n                <CDataTable\n                  items={users}\n                  fields={fields}\n                  sorter\n                  onPageChange={(number) => {\n                    if (addressSelected !== \"\")\n                      return userEffect(number, addressSelected);\n                    if (!searchText !== \"\") return userEffect(number);\n                    else return handleSearchUser(searchText, number);\n                  }}\n                  loading={loading}\n                  pagination\n                  tableFilter={{\n                    placeholder: \"Nombre, Rut o Apellido\",\n                    label: \"Filtrar\",\n                  }}\n                  itemsPerPage={5}\n                  selectable\n                  onTableFilterChange={debounceFilter}\n                  scopedSlots={{\n                    editar: (item) => (\n                      <td>\n                        <CRow>\n                          <CCol\n                            col=\"2\"\n                            xs=\"2\"\n                            sm=\"2\"\n                            md=\"2\"\n                            className=\"mb-2 mb-xl-0\"\n                            style={{ zIndex: 999 }}\n                          >\n                            <CButton\n                              color=\"info\"\n                              onClick={() => {\n                                setCreatingUser(true);\n                                setUser(item);\n                              }}\n                            >\n                              <CIcon content={freeSet.cilPencil} size=\"l\" />\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      </td>\n                    ),\n                    datos: (item) => (\n                      <td>\n                        <CRow>\n                          <CCol\n                            col=\"2\"\n                            xs=\"2\"\n                            sm=\"2\"\n                            md=\"2\"\n                            className=\"mb-2 mb-xl-0\"\n                            style={{ zIndex: 999 }}\n                          >\n                            <CButton\n                              color=\"secondary\"\n                              onClick={() =>\n                                history.push(`/menu/user/${item.ID}`)\n                              }\n                            >\n                              <CIcon content={freeSet.cilUser} size=\"l\" />\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      </td>\n                    ),\n                    unsubscribed: (item) => (\n                      <td>\n                        {item.StateID === \"3\" && (\n                          <CRow>\n                            <CCol\n                              col=\"2\"\n                              xs=\"2\"\n                              sm=\"2\"\n                              md=\"2\"\n                              className=\"mb-2 mb-xl-0\"\n                            >\n                              <CButton\n                                color=\"danger\"\n                                onClick={() => {\n                                  setUnsubscribedSelected(item.ID);\n                                  setShowModalUnsubscribedConfirm(true);\n                                }}\n                              >\n                                <CIcon\n                                  content={freeSet.cilArrowBottom}\n                                  size=\"l\"\n                                />\n                              </CButton>\n                            </CCol>\n                          </CRow>\n                        )}\n                        {item.StateID === \"5\" && (\n                          <CRow>\n                            <CCol\n                              col=\"2\"\n                              xs=\"2\"\n                              sm=\"2\"\n                              md=\"2\"\n                              className=\"mb-2 mb-xl-0\"\n                            >\n                              <CButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setUnsubscribedSelected(item.ID);\n                                  setShowModalSubscribedConfirm(true);\n                                }}\n                              >\n                                <CIcon content={freeSet.cilArrowTop} size=\"l\" />\n                              </CButton>\n                            </CCol>\n                          </CRow>\n                        )}\n                        {item.StateID === \"2\" && (\n                          <CRow>\n                            <CCol\n                              col=\"2\"\n                              xs=\"2\"\n                              sm=\"2\"\n                              md=\"2\"\n                              className=\"mb-2 mb-xl-0\"\n                            >\n                              <CButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setUnsubscribedSelected(item.ID);\n                                  setShowModalSubscribedProcess(true);\n                                }}\n                              >\n                                <CIcon content={freeSet.cilArrowTop} size=\"l\" />\n                              </CButton>\n                            </CCol>\n                          </CRow>\n                        )}\n                      </td>\n                    ),\n                    estado: (item) => (\n                      <td>\n                        <CBadge color={getBadge(item.StateID)}>\n                          {getStateName(item.StateID)}\n                        </CBadge>\n                      </td>\n                    ),\n                  }}\n                />\n              </CCardBody>\n            </CCard>\n          </div>\n          <div style={{ display: !creatingUser ? \"none\" : \"block\" }}>\n            <FormUser\n              user={user}\n              onClose={() => {\n                setUser({});\n                userEffect();\n                setCreatingUser(false);\n              }}\n            />\n            {/* <UserForm\n              user={user}\n              onClose={() => {\n                setUser({});\n                userEffect();\n                setCreatingUser(false);\n              }}\n            /> */}\n          </div>\n        </CCol>\n      </CRow>\n      {!creatingUser && modalVisibleDiscounts && (\n        <Discounts\n          isVisible={modalVisibleDiscounts}\n          setModalVisible={setModalVisible}\n          userID={user.ID}\n        />\n      )}\n      {!creatingUser && modalVisibleCharges && (\n        <Charges\n          isVisible={modalVisibleCharges}\n          setModalVisible={setModalVisibleCharges}\n          userID={user.ID}\n        />\n      )}\n\n      <CModal\n        show={chargesAutomaticModal}\n        onClose={setChargesAutomaticModal}\n        size=\"sm\"\n        color=\"info\"\n      >\n        <CModalHeader style={{ justifyContent: \"center\" }}>\n          <CModalTitle style={{ textAlign: \"center\" }}>\n            Estas seguro?\n          </CModalTitle>\n        </CModalHeader>\n\n        <CModalFooter style={{ justifyContent: \"center\" }}>\n          <CButton\n            color=\"success\"\n            onClick={() =>\n              chargeAutomatic().then(() => {\n                dispatch({\n                  type: \"SET_TOAS\",\n                  payload: {\n                    show: true,\n                    type: \"success\",\n                    label: \"Cobro Generado\",\n                  },\n                });\n                setTimeout(() => {\n                  dispatch({\n                    type: \"SET_TOAS\",\n                    payload: {\n                      show: false,\n                      type: \"\",\n                      label: \"\",\n                    },\n                  });\n                }, 3000);\n                setChargesAutomaticModal(false);\n              })\n            }\n          >\n            Aceptar\n          </CButton>\n          <CButton\n            color=\"danger\"\n            onClick={() => setChargesAutomaticModal(false)}\n          >\n            Cancelar\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <DeleteModal\n        show={showModalUnsubscribedConfirm}\n        setShow={() => {\n          setUnsubscribedSelected({});\n          setShowModalUnsubscribedConfirm(false);\n        }}\n        onFinish={onFinishUnsubscribedProcess}\n      />\n      <DeleteModal\n        show={showModalSubscribedConfirm}\n        setShow={() => {\n          setUnsubscribedSelected({});\n          setShowModalSubscribedConfirm(false);\n        }}\n        onFinish={onFinishSubscribed}\n      />\n      <DeleteModal\n        show={showModalSubscribedProcess}\n        setShow={() => {\n          setUnsubscribedSelected({});\n          setShowModalSubscribedProcess(false);\n        }}\n        onFinish={onFinishSubscribedProcess}\n      />\n    </>\n  );\n};\n\nexport default Tables;\n"],"sourceRoot":""}