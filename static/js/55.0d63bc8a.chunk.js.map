{"version":3,"sources":["state/querys/Rols.js","views/base/tables/Rol.js"],"names":["supabase","require","fields","Rol","useState","loading","setLoading","deleteModal","setDeleteModal","rolSelected","setRolSelected","rols","setRols","edit","setEdit","name","setName","validated","setValidated","componentDidMount","limit","from","select","then","snapshot","data","map","rol","nombre","Name","catch","console","error","handleCrateRol","insert","ID","handleUpdateRol","update","eq","useEffect","className","xs","lg","style","marginBottom","col","htmlFor","id","value","required","onChange","target","paddingTop","color","onClick","items","itemsPerPage","onPageChange","pagination","scopedSlots","editar","item","sm","md","content","freeSet","cilPencil","size","eliminar","cilTrash","show","onClose","closeButton","delete","match"],"mappings":"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","file":"static/js/55.0d63bc8a.chunk.js","sourcesContent":["const { supabase } = require(\"src/config/configSupabase\");\n\nconst createRol = (data) =>\n  supabase\n    .from(\"Rol\")\n    .insert(data)\n    .then((snapshot) => snapshot.data[0].ID);\n\nconst updateRol = (ID, data) => supabase.from(\"Rol\").update(data).eq(\"ID\", ID);\n\nexport { createRol, updateRol };\n","import CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CForm,\n  CInput,\n  CLabel,\n  CModal,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { freeSet } from \"@coreui/icons\";\nimport { supabase } from \"src/config/configSupabase\";\nimport { createRol, updateRol } from \"src/state/querys/Rols\";\n\nconst fields = [\"ID\", \"nombre\", \"editar\", \"eliminar\"];\n\nconst Rol = () => {\n  const [loading, setLoading] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [rolSelected, setRolSelected] = useState({});\n  const [rols, setRols] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n\n  const componentDidMount = (limit = 1) => {\n    setLoading(true);\n    supabase\n      .from(\"Rol\")\n      .select(\"*\")\n      .limit(limit * 5 + 1)\n      .then((snapshot) => {\n        setRols(\n          snapshot.data.map((rol) => ({\n            ...rol,\n            nombre: rol.Name,\n          }))\n        );\n        setLoading(false);\n      })\n      .catch(console.error);\n  };\n  const deleteRol = () =>\n    supabase\n      .from(\"Rol\")\n      .delete()\n      .match({ ID: rolSelected.ID })\n      .then(() => {\n        setLoading(false);\n        setRolSelected();\n        componentDidMount();\n        setDeleteModal(false);\n        setValidated(false);\n      });\n\n  const handleCrateRol = () =>\n    createRol({ Name: name }).then(() => {\n      setName(\"\");\n      componentDidMount();\n      setValidated(false);\n    });\n  const handleUpdateRol = () =>\n    updateRol(rolSelected.ID, { Name: name }).then(() => {\n      setName(\"\");\n      setRolSelected({});\n      componentDidMount();\n      setValidated(false);\n      setEdit(false);\n    });\n  useEffect(componentDidMount, []);\n  return (\n    <CForm className={validated ? \"was-validated\" : \"\"}>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>Roles </CCardHeader>\n            <CCardBody>\n              <CRow style={{ marginBottom: 18 }}>\n                <CCol col=\"2\">\n                  <CLabel htmlFor=\"name\">Nombre</CLabel>\n                  <CInput\n                    id=\"name\"\n                    name=\"name\"\n                    value={name}\n                    required\n                    onChange={({ target: { value } }) => setName(value)}\n                  />\n                </CCol>\n                <CCol col=\"2\" style={{ paddingTop: 30 }}>\n                  <CButton\n                    color={!edit ? \"success\" : \"primary\"}\n                    onClick={() =>\n                      name === \"\"\n                        ? setValidated(true)\n                        : !edit\n                        ? handleCrateRol()\n                        : handleUpdateRol()\n                    }\n                  >\n                    {`${!edit ? \"Crear\" : \"Editar\"} Rol`}\n                  </CButton>\n                </CCol>\n                {edit && (\n                  <CCol col=\"2\" style={{ paddingTop: 30 }}>\n                    <CButton\n                      color={\"danger\"}\n                      onClick={() => {\n                        setEdit(false);\n                        setRolSelected({});\n                        setName(\"\");\n                      }}\n                    >\n                      Cancelar Edicion\n                    </CButton>\n                  </CCol>\n                )}\n              </CRow>\n              <CDataTable\n                items={rols}\n                fields={fields}\n                itemsPerPage={5}\n                onPageChange={componentDidMount}\n                loading={loading}\n                pagination\n                scopedSlots={{\n                  editar: (item) => (\n                    <td className=\"py-2\">\n                      <CRow className=\"align-items-center\">\n                        <CCol\n                          col=\"2\"\n                          xs=\"2\"\n                          sm=\"2\"\n                          md=\"2\"\n                          className=\"mb-2 mb-xl-0\"\n                        >\n                          <CButton\n                            color=\"info\"\n                            onClick={() => {\n                              setRolSelected(item);\n                              setName(item.Name);\n                              setEdit(true);\n                            }}\n                          >\n                            <CIcon content={freeSet.cilPencil} size=\"xl\" />\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </td>\n                  ),\n                  eliminar: (item) => (\n                    <td className=\"py-2\">\n                      <CRow className=\"align-items-center\">\n                        <CCol\n                          col=\"2\"\n                          xs=\"2\"\n                          sm=\"2\"\n                          md=\"2\"\n                          className=\"mb-2 mb-xl-0\"\n                        >\n                          <CButton\n                            color=\"danger\"\n                            onClick={() => {\n                              setDeleteModal(true);\n                              setRolSelected(item);\n                            }}\n                          >\n                            <CIcon content={freeSet.cilTrash} size=\"xl\" />\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CModal\n        show={deleteModal}\n        color=\"danger\"\n        onClose={() => {\n          setRolSelected();\n          setDeleteModal(!deleteModal);\n        }}\n        size=\"sm\"\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>Eliminar Sucursal</CModalTitle>\n        </CModalHeader>\n        <CModalFooter>\n          <CButton color=\"danger\" onClick={deleteRol}>\n            Si\n          </CButton>\n          <CButton\n            onClick={() => {\n              setRolSelected();\n              setDeleteModal(!deleteModal);\n            }}\n            color=\"secondary\"\n          >\n            No\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </CForm>\n  );\n};\n\nexport default Rol;\n"],"sourceRoot":""}