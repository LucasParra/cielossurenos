{"version":3,"sources":["state/querys/Charges.js","state/querys/Discount.js","views/base/tables/Discounts.js","state/querys/General.js","state/querys/Bills.js","views/base/tables/Charges.js","../../src/FileSaver.js"],"names":["supabase","require","getCharges","limit","from","select","then","snapshot","data","catch","console","error","createCharge","chargesData","insert","deleteCharge","ID","delete","match","updateCharge","update","eq","chargeAutomatic","map","user","productSnapshot","products","length","ChargeTypeID","CreatedAt","moment","toDate","Charge","reduce","previousValue","currentValue","Product","BasePrice","ClientID","State","Remaining","getChargeUserID","UserID","getAllChargeUserID","order","ascending","createPay","UrlImage","DocumentData","DocumentID","id","UrlDocument","urlPublicView","createTypeCharge","dataCharge","getTypeCharge","updateChargeType","deleteChargeType","countChargeAssigned","count","createDiscount","DiscountData","updateDiscount","discountID","fields","Discounts","userID","useKeySelector","useState","discounts","setDiscounts","discountType","setDiscountType","Date","temporality","setTemporality","type","setType","discount","setDiscount","typeSelected","setTypeSelected","loading","setLoading","edit","setEdit","noteTask","setNoteTask","componentDidMount","Promise","all","response","discountTypes","tipoDescuento","DiscountType","Name","cantidad","IsPercentage","Discount","onFinish","useEffect","style","margin","marginBottom","col","htmlFor","custom","size","name","value","onChange","target","className","caret","color","onClick","xs","sm","placeholder","required","format","RolID","marginTop","createTaskforAdmin","ZoneID","AddressID","AddressZoneID","TypeID","Note","Data","Temporality","items","itemsPerPage","onPageChange","pagination","scopedSlots","eliminar","item","md","content","freeSet","cilTrash","editar","cilPencil","myHeaders","Headers","append","Charges","client","setRefreshPayments","refreshPayments","charges","setCharges","validated","setValidated","amount","setAmount","chargesSelected","setChargesSelected","chargesTypes","setChargesTypes","chargesTypeSelected","setChargesTypeSelected","setName","files","setFiles","chargesApi","chargesTypeApi","charge","cargo","monto","Intl","NumberFormat","currency","fecha","isMulti","options","filter","parseInt","label","classNamePrefix","selected","paddingTop","body","JSON","stringify","documentTypeId","Business","officeId","coinId","emissionDate","unix","expirationDate","totalAmount","city","company","Names","LastName","code","Rut","municipality","UserAddress","Address","activity","address","AddressName","AddressNumber","isForeigner","details","netUnitValue","quantity","comment","fetch","method","headers","redirect","json","result","log","generateBill","window","open","nameFile","image","storage","upload","cacheControl","upsert","uploadImage","getLastTaskByUserID","taskPending","finishTaskPending","getTechnicalZone","technical","_","random","createTask","AssignedID","User","StateID","documentID","detail","detailID","motive","declareSii","priceAdjustment","editTexts","referenceDocumentId","priceListId","documentDetailId","unitValue","payments","recordDate","paymentTypeId","creditNote","opciones","nombre","publicURL","getPublicUrl","getUrlImage","saveAs","cilFile","cilCloudDownload","marginLeft","fontSize","fontWeight","lastCharge","autoBom","test","Blob","status","MouseEvent","document","self","global","navigator","HTMLAnchorElement","b","location","setTimeout","f","i","module"],"mappings":"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","file":"static/js/7.15ebdd3b.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst { supabase } = require(\"src/config/configSupabase\");\n\nconst getCharges = (limit) =>\n  supabase\n    .from(\"ChargeType\")\n    .select(\"*\")\n    .limit(limit * 5 + 1)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst createCharge = (chargesData) =>\n  supabase\n    .from(\"Charge\")\n    .insert(chargesData)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst deleteCharge = (ID) =>\n  supabase\n    .from(\"Charge\")\n    .delete()\n    .match({ ID })\n    .then((snapshot) => snapshot.data);\n\nconst updateCharge = (chargesData, ID) =>\n  supabase\n    .from(\"Charge\")\n    .update(chargesData)\n    .eq(\"ID\", ID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst chargeAutomatic = () =>\n  supabase\n    .from(\"User\")\n    .select(\"*\")\n    .eq(\"RolID\", 2)\n    .then((snapshot) => {\n      const users = snapshot.data;\n      users.map((user) =>\n        supabase\n          .from(\"UserProduct\")\n          .select(\"Product(*),ID,Price\")\n          .eq(\"UserID\", user.ID)\n          .then((productSnapshot) => {\n            const products = productSnapshot.data;\n            if (products.length === 0) return null;\n\n            return createCharge({\n              ChargeTypeID: 7,\n              CreatedAt: moment().toDate(),\n              Charge: products.reduce(\n                (previousValue, currentValue) =>\n                  previousValue + currentValue.Product.BasePrice,\n                0\n              ),\n              ClientID: user.ID,\n              State: false,\n              Remaining: 0,\n            });\n          })\n      );\n    })\n    .catch(console.error);\n\nconst getChargeUserID = (UserID) =>\n  supabase\n    .from(\"Charge\")\n    .select(\"*,ChargeTypeID(*)\")\n    .eq(\"ClientID\", UserID)\n    .eq(\"State\", false)\n    .then(({ data }) => data);\n\nconst getAllChargeUserID = (UserID) =>\n  supabase\n    .from(\"Charge\")\n    .select(\"*,ChargeTypeID(*)\")\n    .eq(\"ClientID\", UserID)\n    .order(\"CreatedAt\", { ascending: true })\n    .then((snapshot) => snapshot.data);\n\nconst createPay = (ID, UrlImage, DocumentData) =>\n  supabase\n    .from(\"Charge\")\n    .update({\n      State: true,\n      UrlImage,\n      DocumentID: DocumentData.id,\n      UrlDocument: DocumentData.urlPublicView,\n    })\n    .eq(\"ID\", ID)\n    .then((snapshot) => snapshot.data);\n\nconst createTypeCharge = (dataCharge) =>\n  supabase\n    .from(\"ChargeType\")\n    .insert(dataCharge)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst getTypeCharge = () =>\n  supabase\n    .from(\"ChargeType\")\n    .select(\"*\")\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst updateChargeType = (ID, data) =>\n  supabase.from(\"ChargeType\").update(data).eq(\"ID\", ID);\n\nconst deleteChargeType = (ID) =>\n  supabase\n    .from(\"ChargeType\")\n    .delete()\n    .match({ ID })\n    .then((snapshot) => snapshot.data);\n\nconst countChargeAssigned = (ChargeTypeID) =>\n  supabase\n    .from(\"Charge\")\n    .select(\"*\", { count: \"exact\" })\n    .eq(\"ChargeTypeID\", ChargeTypeID)\n    .then(({ count }) => count);\n\nexport {\n  createCharge,\n  deleteCharge,\n  updateCharge,\n  chargeAutomatic,\n  getChargeUserID,\n  getAllChargeUserID,\n  createPay,\n  createTypeCharge,\n  updateChargeType,\n  getTypeCharge,\n  getCharges,\n  deleteChargeType,\n  countChargeAssigned,\n};\n","const { supabase } = require(\"src/config/configSupabase\");\n\nconst createDiscount = (DiscountData) =>\n  supabase\n    .from(\"Discount\")\n    .insert(DiscountData)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nconst updateDiscount = (DiscountData, discountID) =>\n  supabase\n    .from(\"Discount\")\n    .update(DiscountData)\n    .eq(\"ID\", discountID)\n    .then((snapshot) => snapshot.data)\n    .catch(console.error);\n\nexport { createDiscount, updateDiscount };\n","import { freeSet } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCol,\n  CDataTable,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFormGroup,\n  CInput,\n  CInputGroup,\n  CLabel,\n  CRow,\n  CSelect,\n  CTextarea,\n} from \"@coreui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { supabase } from \"src/config/configSupabase\";\nimport { createDiscount, updateDiscount } from \"src/state/querys/Discount\";\nimport moment from \"moment\";\nimport { useKeySelector } from \"src/hook/general\";\nimport { createTaskforAdmin } from \"src/state/querys/Tasks\";\n\nconst fields = [\"ID\", \"tipoDescuento\", \"cantidad\", \"editar\", \"eliminar\"];\n\nconst Discounts = ({ userID }) => {\n  const { user } = useKeySelector([\"user\"]);\n  const [discounts, setDiscounts] = useState([]);\n  const [discountType, setDiscountType] = useState([]);\n  const [temporality, setTemporality] = useState(new Date());\n  const [type, setType] = useState(\"$\");\n  const [discount, setDiscount] = useState(0);\n  const [typeSelected, setTypeSelected] = useState(\"0\");\n  const [loading, setLoading] = useState(false);\n  const [edit, setEdit] = useState(\"\");\n  const [noteTask, setNoteTask] = useState(\"\");\n\n  const componentDidMount = (limit = 1) => {\n    setLoading(true);\n    Promise.all([\n      supabase\n        .from(\"Discount\")\n        .select(\"*,DiscountType(Name),User(Names,LastName)\")\n        .limit(limit * 2 + 1)\n        .eq(\"ClientID\", userID)\n        .then((snapshot) => snapshot.data),\n      supabase.from(\"DiscountType\").then((snapshot) => snapshot.data),\n    ]).then((response) => {\n      const discounts = response[0];\n      const discountTypes = response[1];\n      setDiscountType(discountTypes);\n      setDiscounts(\n        discounts.map((discount) => ({\n          ...discount,\n          tipoDescuento: discount.DiscountType.Name,\n          cantidad: `${!discount.IsPercentage ? \"$\" : \"\"}${discount.Discount}${\n            discount.IsPercentage ? \"%\" : \"\"\n          }`,\n        }))\n      );\n      setLoading(false);\n    });\n  };\n  const handleAddDiscount = () =>\n    createDiscount({\n      TypeID: typeSelected,\n      ClientID: userID,\n      Discount: discount,\n      IsPercentage: type === \"%\",\n      Temporality: temporality,\n    }).then(onFinish);\n\n  const handleEditDiscount = () =>\n    updateDiscount(\n      {\n        TypeID: typeSelected,\n        ClientID: userID,\n        Discount: discount,\n        IsPercentage: type === \"%\",\n        Temporality: temporality,\n      },\n      edit\n    ).then(onFinish);\n\n  const onFinish = () => {\n    componentDidMount();\n    setTypeSelected(\"0\");\n    setTemporality(new Date());\n    setDiscount(0);\n    setNoteTask(\"\");\n  };\n  const deleteDiscount = (ID) =>\n    supabase.from(\"Discount\").delete().match({ ID }).then(onFinish);\n\n  useEffect(componentDidMount, [userID]);\n  return (\n    <>\n      <CRow style={{ margin: 10, marginBottom: 20 }}>\n        <CCol col=\"2\">\n          <CLabel htmlFor=\"DiscountType\">Tipo de descuento</CLabel>\n          <CSelect\n            custom\n            size=\"xl\"\n            name=\"DiscountType\"\n            id=\"DiscountType\"\n            value={typeSelected}\n            onChange={({ target: { value } }) => setTypeSelected(value)}\n          >\n            <option value=\"0\">Selecciona una opcion</option>\n            {discountType.map((type) => (\n              <option key={type.ID} value={type.ID}>\n                {type.Name}\n              </option>\n            ))}\n          </CSelect>\n        </CCol>\n        <CCol col=\"2\">\n          <CLabel htmlFor=\"DiscountType\">Descuento</CLabel>\n          <CInputGroup>\n            <CDropdown className=\"input-group-prepend\">\n              <CDropdownToggle caret color=\"secondary\">\n                {type}\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem value=\"$\" onClick={() => setType(\"$\")}>\n                  $\n                </CDropdownItem>\n                <CDropdownItem value=\"%\" onClick={() => setType(\"%\")}>\n                  %\n                </CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n            <CInput\n              id=\"Discount\"\n              name=\"Discount\"\n              value={discount}\n              onChange={({ target: { value } }) =>\n                setDiscount(type === \"$\" ? value : value <= 100 ? value : 0)\n              }\n            />\n          </CInputGroup>\n        </CCol>\n        {typeSelected === \"1\" && (\n          <CCol style={{ marginBottom: 8 }} xs=\"12\" sm=\"3\">\n            <CLabel htmlFor=\"FechCon\">Fecha Expiracion</CLabel>\n            <CInput\n              id=\"expiration\"\n              type=\"date\"\n              placeholder=\"\"\n              required\n              value={moment(temporality).format(\"YYYY-MM-DD\")}\n              onChange={({ target: { value } }) =>\n                setTemporality(moment(value).toDate())\n              }\n            />\n          </CCol>\n        )}\n        {user?.RolID?.ID === 7 && (\n          <CRow>\n            <CCol xs=\"12\">\n              <CFormGroup>\n                <CLabel htmlFor=\"priceBase\">Nota para el administrador</CLabel>\n                <CTextarea\n                  id=\"name\"\n                  value={noteTask}\n                  onChange={({ target: { value } }) => setNoteTask(value)}\n                />\n              </CFormGroup>\n            </CCol>\n          </CRow>\n        )}\n        <CCol col=\"2\">\n          <CButton\n            color={\"success\"}\n            style={{ marginTop: 28 }}\n            onClick={() => {\n              if (user.RolID.ID === 7) {\n                createTaskforAdmin(user.ZoneID[0].AddressID.AddressZoneID, {\n                  TypeID: edit === \"\" ? 13 : 14,\n                  ClientID: user.ID,\n                  Note: noteTask,\n                  Data: {\n                    TypeID: typeSelected,\n                    ClientID: userID,\n                    Discount: discount,\n                    IsPercentage: type === \"%\",\n                    Temporality: temporality,\n                    ID: edit !== \"\" ? edit : null,\n                  },\n                }).then(onFinish);\n\n                return null;\n              }\n              if (edit === \"\") {\n                handleAddDiscount();\n              } else {\n                handleEditDiscount();\n              }\n            }}\n          >\n            {edit !== \"\" ? \"Editar Descuento\" : \"Añadir Descuento\"}\n          </CButton>\n        </CCol>\n        {edit !== \"\" && (\n          <CCol col=\"2\">\n            <CButton\n              color={\"danger\"}\n              style={{ marginTop: 28 }}\n              onClick={() => {\n                componentDidMount();\n                setTypeSelected(\"0\");\n                setDiscount(0);\n                setEdit(\"\");\n              }}\n            >\n              Cancelar edicion\n            </CButton>\n          </CCol>\n        )}\n      </CRow>\n      <CRow>\n        <CDataTable\n          items={discounts}\n          fields={fields}\n          itemsPerPage={2}\n          onPageChange={componentDidMount}\n          pagination\n          loading={loading}\n          scopedSlots={{\n            eliminar: (item) => (\n              <td className=\"py-2\">\n                <CRow className=\"align-items-center\">\n                  <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                    <CButton\n                      color=\"danger\"\n                      onClick={() => deleteDiscount(item.ID)}\n                    >\n                      <CIcon content={freeSet.cilTrash} size=\"xl\" />\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </td>\n            ),\n            editar: (item) => (\n              <td className=\"py-2\">\n                <CRow className=\"align-items-center\">\n                  <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                    <CButton\n                      color=\"info\"\n                      onClick={() => {\n                        setEdit(item.ID);\n                        setType(item.IsPercentage ? \"%\" : \"$\");\n                        setDiscount(item.Discount);\n                        setTypeSelected(item.TypeID);\n                      }}\n                    >\n                      <CIcon content={freeSet.cilPencil} size=\"xl\" />\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </td>\n            ),\n          }}\n        />\n      </CRow>\n    </>\n  );\n};\n\nexport default Discounts;\n","const { supabase } = require(\"src/config/configSupabase\");\n\nconst uploadImage = (name, image) =>\n  supabase.storage\n    .from(\"charges\")\n    .upload(name, image, {\n      cacheControl: \"3600\",\n      upsert: false,\n    })\n    .then((result) => console.log(result));\n\nconst getUrlImage = (name) =>\n  supabase.storage.from(\"charges\").getPublicUrl(name);\n\nexport { uploadImage, getUrlImage };\n","import moment from \"moment\";\n\nconst myHeaders = new Headers();\nmyHeaders.append(\"access_token\", \"bc58910097a6d35d4049ff5d49b46c1da34ddbec\");\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nconst generateBill = (user, charges) => {\n  const body = JSON.stringify({\n    documentTypeId: user.Business ? 11 : 10,\n    officeId: 1,\n    coinId: 1,\n    emissionDate: moment().unix(),\n    expirationDate: moment().unix(),\n    totalAmount: charges.reduce(\n      (previousValue, currentValue) => previousValue + currentValue.amount,\n      0\n    ),\n    client: {\n      city: \"Temuco\",\n      company: `${user.Names} ${user.LastName}`,\n      code: user.Rut,\n      municipality: user?.UserAddress[0]?.Address.AddressZoneID.Name,\n      activity: \"Importadores\",\n      address: `${user?.UserAddress[0]?.Address.AddressName} ${user?.UserAddress[0]?.Address.AddressNumber}`,\n      isForeigner: 1,\n    },\n    details: charges.map((charge) => ({\n      netUnitValue: charge.amount,\n      quantity: 1,\n      comment: charge.name,\n      discount: 0,\n    })),\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body,\n    redirect: \"follow\",\n  };\n\n  return fetch(\"https://api.bsale.cl/v1/documents.json\", requestOptions)\n    .then((response) => response.json())\n    .then((result) => result)\n    .catch((error) => console.log(\"error\", error));\n};\n\nconst getDetailsDocumentID = (documentID) => {\n  return fetch(`https://api.bsale.cl/v1/documents/${documentID}/details.json`, {\n    method: \"GET\",\n    headers: myHeaders,\n    redirect: \"follow\",\n  })\n    .then((response) => response.json())\n    .then((result) => result)\n    .catch((error) => console.log(\"error\", error));\n};\n\nconst creditNote = (user, documentID, detailID) => {\n  const body = JSON.stringify({\n    motive: \"prueba api\",\n    declareSii: 1,\n    priceAdjustment: 0,\n    editTexts: 0,\n    type: 1,\n    documentTypeId: 12,\n    officeId: 1,\n    emissionDate: moment().unix(),\n    expirationDate: moment().unix(),\n    referenceDocumentId: documentID,\n    priceListId: 27,\n    client: {\n      city: \"Temuco\",\n      company: `${user.Names} ${user.LastName}`,\n      code: user.Rut,\n      municipality: user?.UserAddress[0]?.Address.AddressZoneID.Name,\n      activity: \"Importadores\",\n      address: `${user?.UserAddress[0]?.Address.AddressName} ${user?.UserAddress[0]?.Address.AddressNumber}`,\n      isForeigner: 1,\n    },\n    details: [\n      {\n        documentDetailId: detailID,\n        quantity: 1,\n        unitValue: 0,\n      },\n    ],\n    payments: [\n      {\n        recordDate: 1565095797,\n        amount: 11900,\n        paymentTypeId: 10,\n      },\n    ],\n  });\n  // var body = JSON.stringify({\n  //   documentTypeId: 12,\n  //   officeId: 1,\n\n  //   motive: \"prueba api\",\n  //   declareSii: 1,\n  //   priceAdjustment: 0,\n  //   editTexts: 0,\n  //   type: 1,\n\n  //   // priceListId: 27,\n\n  //   // documentTypeId: 9,\n  //   // officeId: 1,\n\n  //   details: [\n  //     {\n  //       netUnitValue: 10000,\n  //       quantity: 1,\n  //       taxId: \"[1]\",\n  //       comment: \"el nombre del producto que voy a vender\",\n  //       discount: 0,\n  //     },\n  //   ],\n  //   // payments: [\n  //   //   {\n  //   //     recordDate: 1565095797,\n  //   //     amount: 11900,\n  //   //     paymentTypeId: 10,\n  //   //   },\n  //   // ],\n  // });\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: body,\n    redirect: \"follow\",\n  };\n\n  return fetch(\"https://api.bsale.cl/v1/returns.json\", requestOptions)\n    .then((response) => response.json())\n    .then((result) => result)\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport { generateBill, creditNote, getDetailsDocumentID };\n","import React, { useEffect, useState } from \"react\";\nimport { freeSet } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCol,\n  CDataTable,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CLabel,\n  CRow,\n} from \"@coreui/react\";\nimport { supabase } from \"src/config/configSupabase\";\nimport _ from \"lodash\";\nimport {\n  createCharge,\n  createPay,\n  deleteCharge,\n  getTypeCharge,\n  updateCharge,\n} from \"src/state/querys/Charges\";\nimport moment from \"moment\";\nimport { saveAs } from \"file-saver\";\n\nimport Select from \"react-select\";\nimport {\n  createTask,\n  finishTaskPending,\n  getLastTaskByUserID,\n} from \"src/state/querys/Tasks\";\nimport { useKeySelector } from \"src/hook/general\";\nimport { UploadFile } from \"src/components/buttons\";\nimport { getUrlImage, uploadImage } from \"src/state/querys/General\";\nimport {\n  creditNote,\n  generateBill,\n  getDetailsDocumentID,\n} from \"src/state/querys/Bills\";\nimport { getTechnicalZone } from \"src/state/querys/Zones\";\n\nconst fields = [\"ID\", \"fecha\", \"cargo\", \"monto\", \"opciones\", \"eliminar\"];\n\nconst Charges = ({\n  userID,\n  type,\n  client,\n  setRefreshPayments,\n  refreshPayments,\n}) => {\n  const { user } = useKeySelector([\"user\"]);\n  const [charges, setCharges] = useState([]);\n  const [validated, setValidated] = useState(false);\n  const [amount, setAmount] = useState(null);\n  const [chargesSelected, setChargesSelected] = useState([]);\n  const [chargesTypes, setChargesTypes] = useState([]);\n  const [chargesTypeSelected, setChargesTypeSelected] = useState({});\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [edit, setEdit] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const componentDidMount = (limit = 1) => {\n    setLoading(true);\n    Promise.all([\n      supabase\n        .from(\"Charge\")\n        .select(\"*,ChargeTypeID(*)\")\n        .eq(\"ClientID\", userID)\n        .limit(limit * 5 + 1)\n        .order(\"CreatedAt\", { ascending: false })\n        .then((snapshot) => snapshot.data),\n      getTypeCharge(),\n    ]).then((response) => {\n      const chargesApi = response[0];\n      const chargesTypeApi = response[1];\n      setChargesTypes(chargesTypeApi);\n\n      setCharges(\n        chargesApi.map((charge) => ({\n          ID: charge.ID,\n          cargo: charge.ChargeTypeID.Name,\n          monto: new Intl.NumberFormat(\"es-CL\", {\n            currency: \"CLP\",\n            style: \"currency\",\n          }).format(charge.Charge),\n          fecha: moment(charge.CreatedAt).format(\"DD-MM-YYYY\"),\n          ...charge,\n        }))\n      );\n      setLoading(false);\n      setRefreshPayments(false);\n    });\n  };\n  const handleAddCharge = () => {\n    if (charges.filter(({ State }) => !State).length === 1) {\n      getTechnicalZone(user?.ZoneID[0].AddressID.AddressZoneID).then(\n        (result) => {\n          const technical = result[_.random(0, result.length - 1)];\n          createTask({\n            TypeID: 4,\n            AssignedID: technical.User.ID,\n            ClientID: userID,\n            StateID: 1,\n            Note: \"desconectar a este usuario ya que paso a estado moroso\",\n          });\n        }\n      );\n    }\n\n    createCharge({\n      ChargeTypeID: chargesTypeSelected.ID,\n      CreatedAt: moment().toDate(),\n      Charge: amount,\n      ClientID: userID,\n      State: false,\n      Remaining: 0,\n    }).then(() => {\n      setRefreshPayments(true);\n\n      componentDidMount();\n      setChargesTypeSelected({});\n      setName(0);\n      setAmount(0);\n    });\n  };\n\n  const handleEditcharge = () =>\n    updateCharge(\n      {\n        ChargeTypeID: chargesTypeSelected.ID,\n        Name: name,\n        Charge: amount,\n        ClientID: userID,\n      },\n      edit\n    ).then(() => {\n      componentDidMount();\n      setName(0);\n      setChargesTypeSelected({});\n      setAmount(0);\n      setEdit(\"\");\n    });\n  useEffect(componentDidMount, [refreshPayments, setRefreshPayments, userID]);\n  return (\n    <CForm className={validated ? \"was-validated\" : \"\"}>\n      <CRow\n        style={{ margin: 10, marginBottom: 20 }}\n        className=\"align-items-center\"\n      >\n        {type === \"pay\" ? (\n          <>\n            <CCol col=\"2\">\n              <CLabel\n                htmlFor=\"charges\"\n                style={{ color: validated ? \"red\" : \"#000\" }}\n              >\n                {!validated ? \"cargos\" : \"Debe seleccionar almenos un cargo\"}\n              </CLabel>\n              <Select\n                isMulti\n                name=\"charges\"\n                required\n                options={charges\n                  .filter(({ State }) => !State)\n                  .map((charge) => ({\n                    value: charge.ID,\n                    amount: parseInt(charge.Charge),\n                    name: charge.cargo,\n                    label: `${charge.cargo} | ${charge.monto} | ${charge.fecha}`,\n                    ID: charge.ID,\n                  }))}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                value={chargesSelected}\n                onChange={(selected) => {\n                  setChargesSelected(selected);\n                  selected.map(({ value }) =>\n                    setAmount(amount + parseInt(value))\n                  );\n                }}\n              />\n            </CCol>\n          </>\n        ) : (\n          <>\n            <CCol col=\"2\">\n              <CLabel htmlFor=\"amount\">Monto</CLabel>\n              <div className=\"controls\">\n                <CInputGroup className=\"input-prepend\">\n                  <CInputGroupPrepend>\n                    <CInputGroupText>$</CInputGroupText>\n                  </CInputGroupPrepend>\n                  <CInput\n                    id=\"amount\"\n                    size=\"16\"\n                    type=\"number\"\n                    onChange={({ target: { value } }) =>\n                      setAmount(parseInt(value))\n                    }\n                    required\n                    value={amount}\n                  />\n                </CInputGroup>\n              </div>\n            </CCol>\n            <CCol col=\"2\">\n              <CLabel\n                htmlFor=\"amount\"\n                style={{ color: validated ? \"red\" : \"#000\" }}\n              >\n                {!validated ? \"Tipo\" : \"Debe seleccionar un tipo\"}\n              </CLabel>\n              <Select\n                name=\"colors\"\n                options={chargesTypes.map((charge) => ({\n                  value: charge.ID,\n                  label: charge.Name,\n                  ID: charge.ID,\n                }))}\n                required\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                value={chargesTypeSelected}\n                onChange={(selected) => {\n                  setChargesTypeSelected(selected);\n                }}\n              />\n            </CCol>\n          </>\n        )}\n        {type === \"pay\" && (\n          <>\n            {/* <CCol xs=\"2\">\n              <CFormGroup>\n                <CLabel htmlFor=\"priceBase\">Nota para el administrador</CLabel>\n                <CTextarea\n                  id=\"name\"\n                  value={noteTask}\n                  onChange={({ target: { value } }) => setNoteTask(value)}\n                />\n              </CFormGroup>\n            </CCol> */}\n            <CCol xs=\"2\">\n              <CButton color=\"info\">\n                <UploadFile\n                  onChange={({ target: { files } }) => setFiles(files)}\n                >\n                  Subir Archivo\n                </UploadFile>\n              </CButton>\n            </CCol>\n          </>\n        )}\n        <CCol col=\"2\" style={{ paddingTop: 30 }}>\n          <CButton\n            color={\"success\"}\n            onClick={() => {\n              if (type === \"pay\") {\n                if (chargesSelected.length === 0) {\n                  return setValidated(true);\n                }\n                return generateBill(client, chargesSelected).then(\n                  (response) => {\n                    window.open(response.urlPublicView, \"_blank\");\n\n                    const nameFile = `${moment().unix()}.jpg`;\n\n                    if (files[0]) uploadImage(nameFile, files[0]);\n\n                    return Promise.all(\n                      chargesSelected.map((charge) =>\n                        createPay(\n                          charge.ID,\n                          files[0] ? nameFile : null,\n                          response\n                        )\n                      )\n                    ).then(() => {\n                      setValidated(false);\n                      if (charges.filter(({ State }) => !State).length === 1) {\n                        getLastTaskByUserID(userID).then((taskPending) => {\n                          if (taskPending.length > 0) {\n                            finishTaskPending(taskPending[0].ID);\n                          } else {\n                            getTechnicalZone(\n                              user?.ZoneID[0].AddressID.AddressZoneID\n                            ).then((result) => {\n                              const technical =\n                                result[_.random(0, result.length - 1)];\n                              createTask({\n                                TypeID: 5,\n                                AssignedID: technical.User.ID,\n                                ClientID: userID,\n                                StateID: 1,\n                                Note: \"Conectar a este usuario \",\n                              });\n                            });\n                          }\n                        });\n                      }\n                      setAmount(0);\n                      setChargesSelected([]);\n                      componentDidMount();\n                      setRefreshPayments(true);\n                    });\n                  }\n                );\n              }\n\n              if (amount === null || chargesTypeSelected.length === 0) {\n                return setValidated(true);\n              }\n\n              if (edit === \"\") {\n                handleAddCharge();\n              } else {\n                handleEditcharge();\n              }\n              setValidated(false);\n            }}\n          >\n            {type !== \"pay\"\n              ? edit !== \"\"\n                ? \"opciones Cargo\"\n                : \"Añadir Cargo\"\n              : \"Crear Pago\"}\n          </CButton>\n        </CCol>\n\n        {type !== \"pay\" && edit !== \"\" && (\n          <CCol col=\"2\" style={{ paddingTop: 30 }}>\n            <CButton\n              color={\"danger\"}\n              onClick={() => {\n                componentDidMount();\n                setName(0);\n                setAmount(0);\n                setEdit(\"\");\n              }}\n            >\n              Cancelar Edicion\n            </CButton>\n          </CCol>\n        )}\n      </CRow>\n      <CRow>\n        <CDataTable\n          items={charges.filter(({ State }) =>\n            type === \"pay\" ? State === true : State === false\n          )}\n          fields={fields}\n          itemsPerPage={5}\n          onPageChange={componentDidMount}\n          pagination\n          loading={loading}\n          scopedSlots={{\n            eliminar: (item) => (\n              <td className=\"py-2\">\n                <CRow className=\"align-items-center\">\n                  <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                    <CButton\n                      color=\"danger\"\n                      onClick={() => {\n                        getDetailsDocumentID(item.DocumentID).then((detail) => {\n                          creditNote(\n                            client,\n                            item.DocumentID,\n                            detail.items[0].id\n                          ).then(() =>\n                            deleteCharge(item.ID).then(() => {\n                              setLoading(false);\n                              componentDidMount();\n                            })\n                          );\n                        });\n                      }}\n                    >\n                      <CIcon content={freeSet.cilTrash} size=\"xl\" />\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </td>\n            ),\n\n            opciones: (item) => (\n              <td className=\"py-2\">\n                <CRow className=\"align-items-center\">\n                  {type !== \"pay\" ? (\n                    <CCol col=\"2\" xs=\"2\" sm=\"2\" md=\"2\" className=\"mb-2 mb-xl-0\">\n                      <CButton\n                        color=\"info\"\n                        onClick={() => {\n                          if (item.ChargeTypeID?.ID)\n                            setChargesTypeSelected({\n                              ...item.ChargeTypeID,\n                              label: item.ChargeTypeID.Name,\n                            });\n\n                          setName(item.nombre);\n                          setAmount(parseInt(item.Charge));\n                          setEdit(item.ID);\n                        }}\n                      >\n                        <CIcon content={freeSet.cilPencil} size=\"xl\" />\n                      </CButton>\n                    </CCol>\n                  ) : (\n                    <>\n                      {item.UrlImage && (\n                        <CCol\n                          col=\"2\"\n                          xs=\"2\"\n                          sm=\"2\"\n                          md=\"2\"\n                          className=\"mb-2 mb-xl-0\"\n                        >\n                          <CButton\n                            color=\"info\"\n                            onClick={() => {\n                              const { publicURL } = getUrlImage(item.UrlImage);\n                              saveAs(publicURL, `${moment().unix()}.jpg`);\n                            }}\n                          >\n                            <CIcon content={freeSet.cilFile} size=\"xl\" />\n                          </CButton>\n                        </CCol>\n                      )}\n                      {item.UrlDocument && (\n                        <CCol\n                          col=\"2\"\n                          xs=\"2\"\n                          sm=\"2\"\n                          md=\"2\"\n                          className=\"mb-2 mb-xl-0\"\n                        >\n                          <CButton\n                            color=\"info\"\n                            onClick={() =>\n                              window.open(item.UrlDocument, \"_blank\")\n                            }\n                          >\n                            <CIcon\n                              content={freeSet.cilCloudDownload}\n                              size=\"xl\"\n                            />\n                          </CButton>\n                        </CCol>\n                      )}\n                    </>\n                  )}\n                </CRow>\n              </td>\n            ),\n          }}\n        />\n        {type !== \"pay\" && (\n          <CLabel\n            htmlFor=\"charges\"\n            style={{\n              marginLeft: 18,\n              fontSize: 18,\n              fontWeight: \"bold\",\n            }}\n          >\n            {`Deuda Total : ${new Intl.NumberFormat(\"es-CL\", {\n              currency: \"CLP\",\n              style: \"currency\",\n            }).format(\n              charges\n                .filter(({ State }) => State === false)\n                .reduce(\n                  (lastCharge, charge) => parseInt(charge.Charge) + lastCharge,\n                  0\n                )\n            )}`}\n          </CLabel>\n        )}\n      </CRow>\n    </CForm>\n  );\n};\n\nexport default Charges;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"sourceRoot":""}